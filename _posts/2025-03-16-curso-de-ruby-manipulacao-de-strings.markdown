---
layout: post
title:  "Curso de Ruby - Manipula√ß√£o de Strings"
date:   2025-03-16 13:45:02 -0300
categories: ruby
---

![Ruby]({{ site.url }}/assets/ruby.png){:style="width: 100%" }

#  **Manipula√ß√£o de Strings**
As **strings** em Ruby s√£o muito poderosas e oferecem diversos m√©todos √∫teis para manipula√ß√£o de texto.

## **Criando Strings**
```ruby
str1 = "Ol√°, mundo!"
str2 = 'Ruby √© incr√≠vel!'
```

Podemos usar **interpola√ß√£o** para incluir vari√°veis dentro de strings **(somente com aspas duplas `" "`)**:

```ruby
nome = "Rafael"
puts "Ol√°, #{nome}!"  # ‚úÖ Funciona
puts 'Ol√°, #{nome}!'  # ‚ùå N√£o funciona (exibe #{nome} como texto)
```

 **Sa√≠da:**  
```
Ol√°, Rafael!
Ol√°, #{nome}!
```

---

## **M√©todos √öteis para Strings**
###  **Letras em Mai√∫sculas e Min√∫sculas**
```ruby
str = "Ruby √© incr√≠vel!"
# Toda a string fica em mai√∫scula
puts str.upcase   # "RUBY √â INCR√çVEL!"
# Toda a string fica em min√∫scula
puts str.downcase # "ruby √© incr√≠vel!" 
# A primeira letra fica em mai√∫scula
puts str.capitalize # "Ruby √© incr√≠vel!"
```

###  **Removendo Espa√ßos Extras**
```ruby
str = "   Ol√°, Ruby!   "
puts str.strip  # "Ol√°, Ruby!"
```

###  **Substituindo Caracteres**
```ruby
str = "Eu amo Java!"
puts str.gsub("Java", "Ruby")  # "Eu amo Ruby!"
```

###  **Dividindo Strings**
```ruby
frase = "Aprender Ruby √© divertido"
palavras = frase.split(" ")
puts palavras.inspect  # ["Aprender", "Ruby", "√©", "divertido"]
```

###  **Concatenando Strings**
```ruby
nome = "Rafael"
puts "Ol√°, " + nome + "!"      # Usando +
puts "Ol√°, #{nome}!"           # Usando interpola√ß√£o
puts ["Ol√°", nome, "!"].join(" ") # Usando join
```

###  **Saber o n√∫mero de caracteres da string**
```ruby
# use os m√©todos length ou size
"Ol√°".length  # => 3
```

###  **Inverter uma string**
```ruby
"ol√°".reverse  # => "√°lo"
```

###  **Verificar se a string cont√©m uma substring**
```ruby
substring = "l"
"ol√°".include?(substring)  # => true
```

Para conhecer outros m√©todos n√£o ensinados nesse post sobre manipula√ß√£o de strings voc√™ pode consultar [Documenta√ß√£o Oficial sobre Strings do Ruby](https://docs.ruby-lang.org/en/3.4/String.html)

---

#  **Exerc√≠cios**
Agora √© sua vez! üí™  

1. **Concatena√ß√£o e Interpola√ß√£o**
**Tarefa:**
    1.  Declare duas vari√°veis: `primeiro_nome` com o valor "Jo√£o" e `ultimo_nome` com o valor "Silva".
    2.  Use o operador de concatena√ß√£o (`+`) para criar uma vari√°vel chamada `nome_completo` que contenha o nome completo (lembre-se de adicionar um espa√ßo entre o primeiro e o √∫ltimo nome). Imprima `nome_completo`.
    3.  Declare uma vari√°vel `idade` com o valor 30.
    4.  Use a interpola√ß√£o de strings (com `#{}`) para criar uma frase que diga: "Meu nome completo √© [valor de nome_completo] e eu tenho [valor de idade] anos." Imprima essa frase.

2. **Convers√£o de Caso e Comprimento**
**Tarefa:**
    1.  Declare uma vari√°vel chamada `frase_exemplo` com a seguinte frase: "ruby √© uma linguagem poderosa".
    2.  Use um m√©todo de string para converter toda a `frase_exemplo` para letras mai√∫sculas. Imprima o resultado.
    3.  Use outro m√©todo de string para converter toda a `frase_exemplo` para letras min√∫sculas. Imprima o resultado (dever√° ser a frase original).
    4.  Use um m√©todo para encontrar o n√∫mero de caracteres (incluindo espa√ßos) na `frase_exemplo`. Imprima o comprimento da frase.

3. **Substring e Divis√£o**
**Tarefa:**
    1.  Declare uma vari√°vel chamada `texto` com a seguinte string: "ma√ß√£,banana,laranja,uva".
    2.  Use um m√©todo para verificar se a string `texto` cont√©m a substring "banana". Imprima o resultado (dever√° ser `true`).
    3.  Use um m√©todo para encontrar o √≠ndice da primeira ocorr√™ncia da substring "laranja" na string `texto`. Imprima o √≠ndice.
    4.  Use um m√©todo para dividir a string `texto` em um array de substrings, usando a v√≠rgula (`,`) como delimitador. Imprima o array resultante.

**Se quiser, tente resolver e envie nos coment√°rios seus c√≥digos e suas respostas para analisarmos juntos!** üöÄ

**Pr√≥xima aula - [Estruturas de Dados]({% link _posts/2025-03-16-curso-de-ruby-estruturas-de-dados.markdown %})**