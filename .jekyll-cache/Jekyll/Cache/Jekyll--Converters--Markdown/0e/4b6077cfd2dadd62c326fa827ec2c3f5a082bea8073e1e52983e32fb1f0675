I"Ä"<p><img src="https://rafaelsanches123.github.io/assets/linguagem-python.png" alt="linguagem-python" style="width: 100%" /></p>

<h2 id="estruturas-de-dados">Estruturas de dados</h2>

<p>Estruturas de dados consistem na organiza√ß√£o de dados na mem√≥ria de um computador ou em um dispositivo de armazenamento de modo que esses dados possam ser acessados de forma perform√°tica.</p>

<p>Em python temos estruturas de dados por meio dos tipos de vari√°veis compostas <strong>Listas</strong>, <strong>Dicion√°rios</strong>, <strong>Tuplas</strong> e <strong>Conjuntos</strong> que nos auxiliam de forma perform√°tica a armazenar dados e acess√°-los da melhor forma poss√≠vel. Vale ressaltar que isso ocorre de modo mais alto n√≠vel em compara√ß√£o a linguagens como a <strong>c</strong> por exemplo que voc√™ desenvolve todo processo relacionado a essas estruturas de dados desde a conex√£o entre posi√ß√µes na mem√≥ria por meio de ponteiros e a l√≥gica por tr√°s desses processos que precisam ser desenvolvidos.</p>

<p>Na linguagem de programa√ß√£o Python:</p>
<ul>
  <li>O tipo Lista √© uma estrutura de dados ordenada e mut√°vel. Permite itens duplicados.</li>
  <li>O tipo Tupla √© uma estrutura de dados ordenada e imut√°vel. Permite itens duplicados.</li>
  <li>O tipo Conjunto √© uma estrutura de dados n√£o ordenada e n√£o indexada. N√£o permite itens duplicados.</li>
  <li>O tipo dicion√°rio √© uma estrutura de dados desordenada e mut√°vel. N√£o permite itens duplicados.</li>
</ul>

<h3 id="tupla">Tupla:</h3>

<p>A tupla √© uma vari√°vel de tipo composto que permite que seja atribu√≠do a ela mais de um tipo de vari√°vel simples/primitiva. Isso √© b√°sicamente uma lista que vai guardar vari√°veis por√©m, existe um ponto importante sobre tuplas, elas n√£o permitem ser modificadas depois de serem criadas ou seja a <strong>Tupla</strong> √© uma Lista <strong>imut√°vel</strong>. Veja o exemplo a seguir:</p>

<p>C√≥digo:</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">nomes</span> <span class="o">=</span> <span class="p">(</span><span class="s">"Rafael"</span><span class="p">,</span> <span class="s">"Gabriel"</span><span class="p">,</span> <span class="s">"Pedro"</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">nomes</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
<span class="k">print</span><span class="p">(</span><span class="n">nomes</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span>
<span class="k">print</span><span class="p">(</span><span class="n">nomes</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span>

<span class="k">print</span><span class="p">(</span><span class="nb">type</span><span class="p">(</span><span class="n">nomes</span><span class="p">))</span>

<span class="n">nomes</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="s">"Leandro"</span>

</code></pre></div></div>
<p>Resultado:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Rafael
Gabriel
Pedro
&lt;class <span class="s1">'tuple'</span><span class="o">&gt;</span>
Traceback <span class="o">(</span>most recent call last<span class="o">)</span>:
  File <span class="s2">"main.py"</span>, line 9, <span class="k">in</span> &lt;module&gt;
    nomes[0] <span class="o">=</span> <span class="s2">"Leandro"</span>
TypeError: <span class="s1">'tuple'</span> object does not support item assignment
<span class="o">&gt;&gt;&gt;</span>

</code></pre></div></div>
<p>No resultado ilustrado acima √© poss√≠vel visualizar a imutabilidade de uma tupla quando tentamos alterar ela.</p>

<p>Uma tupla pode ser declada das seguintes formas a baixo:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Tupla declarada sem o uso de par√™ntesis
</span><span class="n">tupla_1</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span>
<span class="c1"># Tupla declarada com o uso de par√™ntesis
</span><span class="n">tupla_2</span> <span class="o">=</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">)</span>

<span class="c1"># Tupla com um √∫nico elemento
</span><span class="n">tupla_3</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span>

<span class="c1"># Tupla vazia
</span><span class="n">tupla_4</span> <span class="o">=</span> <span class="p">()</span>
</code></pre></div></div>

<p>Durante meus anos de desenvolvimento eu particularmente n√£o cheguei a precisar utilizar tupla nos softwares que j√° criei. Se voc√™ que est√° lendo esse post j√° teve que utilizar para algo comenta nos coment√°rios onde voc√™ j√° utilizou!</p>

<h3 id="lista">Lista:</h3>

<p>As listas em Python s√£o uma sequ√™ncia ordenada de valores onde, cada valor na lista √© identificado por um √≠ndice. Os valores que formam uma lista s√£o chamados elementos ou itens. Listas s√£o similares a strings, que s√£o uma sequ√™ncia de caracteres, no entanto, diferentemente de strings, os itens de uma lista podem ser de tipos diferentes e tamanhos.</p>

<p>Veja um exemplo na imagem a seguir:</p>

<p><img src="https://rafaelsanches123.github.io/assets/listas-em-python.png" alt="lista-em-python" style="width: 100%" /></p>

<p><strong><em>Figura 1</em></strong>: <em>Exemplo do tipo de dados lista em python</em></p>

<p>Na Figura acima √© poss√≠vel observar um exemplo de lista na qual ela tem tamanho 6. Vale lembrar que em python as listas come√ßam na posi√ß√£o 0. Na lista de exemplo na imagem √© poss√≠vel observar que ela tem o n√∫mero 29 do tipo inteiro na 1¬™ posi√ß√£o. Na 2¬™ posi√ß√£o temos o nome Rafael que nada mais √© do que uma vari√°vel do tipo String. Na 3¬™ posi√ß√£o temos o n√∫mero -9. Na 4¬™ posi√ß√£o temos a string cursos. Na 5¬™ posi√ß√£o temos uma lista de n√∫meros inteiros e na √∫ltima posi√ß√£o (i.e., 6¬™) temos um tipo string contendo a palavra Teste.</p>

<p>Uma coisa que geralmente deixa as pessoas confusas quando est√£o aprendendo alguma linguagem de programa√ß√£o √© a posi√ß√£o dos elementos. Isso ocorre pelo fato de come√ßarem pela posi√ß√£o 0 e n√£o pela posi√ß√£o 1. N√£o se preocupe que com o tempo voc√™ se acostuma com isso e vai virar algo super comum para voc√™.</p>

<p>Bora ver alguns exemplos de como criar listas e algumas a√ß√µes que podemos realizar sobre elas.</p>

<p>Primeiro passo √© criar uma lista:</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#Lista vazia
</span><span class="n">lista1</span> <span class="o">=</span> <span class="p">[]</span>

<span class="c1">#Lista da Figura 1
</span><span class="n">lista2</span> <span class="o">=</span> <span class="p">[</span><span class="mi">29</span><span class="p">,</span><span class="s">"Rafael"</span><span class="p">,</span><span class="o">-</span><span class="mi">9</span><span class="p">,</span><span class="s">"cursos"</span><span class="p">,[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">],</span><span class="s">"Teste"</span><span class="p">]</span>
</code></pre></div></div>
<p>Para descobrirmos a quantidade de elementos em uma lista pode usar a fun√ß√£o <strong>len</strong>:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#Tamanho de uma lista
</span><span class="k">print</span><span class="p">(</span><span class="s">"O tamanho da lista1 √©: {}"</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">lista1</span><span class="p">)))</span>

<span class="k">print</span><span class="p">(</span><span class="s">"O tamanho da lista2 √©: {}"</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">lista2</span><span class="p">)))</span>
</code></pre></div></div>

<p>Para o bloco de c√≥digo acima ter√≠amos a seguinte sa√≠da em nosso terminal:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>O tamanho da lista1 √©: 0
O tamanho da lista2 √©: 6
</code></pre></div></div>
<p>Para acessar os elementos de uma lista podemos realizar essa a√ß√£o de dois modos, um deles seria acessando o elemento na posi√ß√£o desejada e o outro por meio de um la√ßo de repeti√ß√£o.</p>

<p>Exemplos utilizando la√ßo de repeti√ß√£o:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#iterar sobre uma lista
</span><span class="k">for</span> <span class="n">elemento</span> <span class="ow">in</span> <span class="n">lista2</span><span class="p">:</span>
  <span class="k">print</span><span class="p">(</span><span class="s">"Elemento: {}"</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">elemento</span><span class="p">))</span>
</code></pre></div></div>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Para o bloco de c√≥digo acima ter√≠amos a seguinte sa√≠da em nosso terminal:
Elemento: 29
Elemento: Rafael
Elemento: <span class="nt">-9</span>
Elemento: cursos
Elemento: <span class="o">[</span>1, 2, 3, 4, 5]
Elemento: Teste
</code></pre></div></div>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#exibir posi√ß√£o e elemento daquela posi√ß√£o
</span><span class="k">for</span> <span class="n">posicao</span><span class="p">,</span> <span class="n">elemento</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">lista2</span><span class="p">):</span>
  <span class="k">print</span><span class="p">(</span><span class="s">"Posi√ß√£o: {}, Elemento: {}"</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">posicao</span><span class="p">,</span> <span class="n">elemento</span><span class="p">))</span>
</code></pre></div></div>

<p>Para o bloco de c√≥digo acima ter√≠amos a seguinte sa√≠da em nosso terminal:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Posi√ß√£o: 0, Elemento: 29
Posi√ß√£o: 1, Elemento: Rafael
Posi√ß√£o: 2, Elemento: <span class="nt">-9</span>
Posi√ß√£o: 3, Elemento: cursos
Posi√ß√£o: 4, Elemento: <span class="o">[</span>1, 2, 3, 4, 5]
Posi√ß√£o: 5, Elemento: Teste
</code></pre></div></div>
<p>Veja agora alguns exemplos acessando diretamente a posi√ß√£o de uma lista:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">print</span><span class="p">(</span><span class="n">lista1</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
</code></pre></div></div>
<p>Para o bloco de c√≥digo acima ter√≠amos a seguinte sa√≠da em nosso terminal:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Traceback <span class="o">(</span>most recent call last<span class="o">)</span>:
  File <span class="s2">"main.py"</span>, line 27, <span class="k">in</span> &lt;module&gt;
    print<span class="o">(</span>lista1[0]<span class="o">)</span>
IndexError: list index out of range
</code></pre></div></div>
<p>Para o exemplo acima a lista1 esta vazia logo, n√£o √© poss√≠vel acessar nada nela e por isso ao tentarmos acessar uma posi√ß√£o qualquer nela ela gerou a exce√ß√£o acima na sa√≠da do c√≥digo. Lembre se que mesmo para uma lista que contenha elementos e n√£o esteja vazia se voc√™ tentar acessar uma posi√ß√£o que n√£o exista nessa lista a exce√ß√£o acima tamb√©m ocorrer√°.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#Posi√ß√£o 0
</span><span class="k">print</span><span class="p">(</span><span class="n">lista2</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>

<span class="c1">#Posi√ß√£o 3
</span><span class="k">print</span><span class="p">(</span><span class="n">lista2</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span>

<span class="c1">#Posi√ß√£o 5
</span><span class="k">print</span><span class="p">(</span><span class="n">lista2</span><span class="p">[</span><span class="mi">4</span><span class="p">])</span>
</code></pre></div></div>
<p>Para o bloco de c√≥digo acima ter√≠amos a seguinte sa√≠da em nosso terminal:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>29
<span class="nt">-9</span>
<span class="o">[</span>1, 2, 3, 4, 5]
</code></pre></div></div>

<p>Se eu quiser verificar se um determinado elemento est√° na lista eu posso utilizar o operador <strong>in</strong>:</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">if</span><span class="p">(</span><span class="o">-</span><span class="mi">9</span> <span class="ow">in</span> <span class="n">lista2</span><span class="p">):</span>
  <span class="k">print</span><span class="p">(</span><span class="s">"-9 est√° na lista2 !"</span><span class="p">)</span>
<span class="k">else</span><span class="p">:</span>
  <span class="k">print</span><span class="p">(</span><span class="s">"-9 n√£o est√° na lista2 !"</span><span class="p">)</span>
</code></pre></div></div>
<p>Para o bloco de c√≥digo acima ter√≠amos a seguinte sa√≠da em nosso terminal:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">-9</span> est√° na lista2 <span class="o">!</span>
</code></pre></div></div>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">if</span><span class="p">(</span><span class="mi">30</span> <span class="ow">in</span> <span class="n">lista2</span><span class="p">):</span>
  <span class="k">print</span><span class="p">(</span><span class="s">"30 est√° na lista2 !"</span><span class="p">)</span>
<span class="k">else</span><span class="p">:</span>
  <span class="k">print</span><span class="p">(</span><span class="s">"30 n√£o est√° na lista2 !"</span><span class="p">)</span>
</code></pre></div></div>
<p>Para o bloco de c√≥digo acima ter√≠amos a seguinte sa√≠da em nosso terminal:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>30 n√£o est√° na lista2 <span class="o">!</span>
</code></pre></div></div>

<p>Sabia que voc√™ tamb√©m pode encontrar valores de m√≠nimos, m√°ximos e soma utilizando listas:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#lista composta somente por n√∫meros
</span><span class="n">lista3</span> <span class="o">=</span> <span class="p">[</span><span class="mi">10</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">18</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">25</span><span class="p">]</span>

<span class="c1">#m√≠nimo
</span><span class="k">print</span><span class="p">(</span><span class="s">"Menor valor: {}"</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="nb">min</span><span class="p">(</span><span class="n">lista3</span><span class="p">)))</span>

<span class="c1">#m√°ximo
</span><span class="k">print</span><span class="p">(</span><span class="s">"Maior valor: {}"</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="nb">max</span><span class="p">(</span><span class="n">lista3</span><span class="p">)))</span>

<span class="c1">#somat√≥rio
</span><span class="k">print</span><span class="p">(</span><span class="s">"Soma: {}"</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="nb">sum</span><span class="p">(</span><span class="n">lista3</span><span class="p">)))</span>
</code></pre></div></div>
<p>Para o bloco de c√≥digo acima ter√≠amos a seguinte sa√≠da em nosso terminal:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Menor valor: 1
Maior valor: 25
Soma: 62
</code></pre></div></div>

<p>A ordena√ß√£o de listas:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#ordem crescente
</span><span class="k">print</span><span class="p">(</span><span class="nb">sorted</span><span class="p">(</span><span class="n">lista3</span><span class="p">,</span> <span class="n">key</span><span class="o">=</span><span class="nb">int</span><span class="p">,</span> <span class="n">reverse</span><span class="o">=</span><span class="bp">False</span><span class="p">))</span>

<span class="c1">#ordem decrescente
</span><span class="k">print</span><span class="p">(</span><span class="nb">sorted</span><span class="p">(</span><span class="n">lista3</span><span class="p">,</span> <span class="n">key</span><span class="o">=</span><span class="nb">int</span><span class="p">,</span> <span class="n">reverse</span><span class="o">=</span><span class="bp">True</span><span class="p">))</span>
</code></pre></div></div>
<p>Para o bloco de c√≥digo acima ter√≠amos a seguinte sa√≠da em nosso terminal:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>1, 3, 5, 10, 18, 25]
<span class="o">[</span>25, 18, 10, 5, 3, 1]
</code></pre></div></div>

<p>Opera√ß√µes com Listas:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#Adicionando elementos de forma din√¢mica a listas:
</span>
<span class="c1">#lista vazia
</span><span class="n">lista_nomes</span> <span class="o">=</span> <span class="p">[]</span>

<span class="c1">#adicionando nomes a lista vazia
</span>
<span class="c1">#adicionando elemento na √∫ltima posi√ß√£o da lista
</span><span class="n">lista_nomes</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="s">"Rafael"</span><span class="p">)</span>

<span class="c1">#adicionando elemento na √∫ltima posi√ß√£o da lista
</span><span class="n">lista_nomes</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="s">"Francisco"</span><span class="p">)</span>

<span class="c1">#adicionando elemento na √∫ltima posi√ß√£o da lista
</span><span class="n">lista_nomes</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="s">"Viana"</span><span class="p">)</span>

<span class="c1">#adicionando elemento na √∫ltima posi√ß√£o da lista
</span><span class="n">lista_nomes</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="s">"Sanches"</span><span class="p">)</span>

<span class="c1">#exibindo a lista
</span><span class="k">print</span><span class="p">(</span><span class="n">lista_nomes</span><span class="p">)</span>
</code></pre></div></div>
<p>Para o bloco de c√≥digo acima ter√≠amos a seguinte sa√≠da em nosso terminal:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span><span class="s1">'Rafael'</span>, <span class="s1">'Francisco'</span>, <span class="s1">'Viana'</span>, <span class="s1">'Sanches'</span><span class="o">]</span>
</code></pre></div></div>

<p>A fun√ß√£o <strong>append</strong> sempre insere elementos no final da lista. Isso √© bom por quest√µes de desempenho. √â mais r√°pido inserir elementos no final de uma lista porque n√£o precisamos percorrer a lista procurando a posi√ß√£o onde o elemento deve ser inserido. Mas tamb√©m √© poss√≠vel inserir elementos em posi√ß√µes espec√≠ficas da lista, usando a fun√ß√£o <strong>insert</strong>.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">lista_nomes</span><span class="p">.</span><span class="n">insert</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="s">"Teste"</span><span class="p">)</span>

<span class="c1">#exibindo a lista
</span><span class="k">print</span><span class="p">(</span><span class="n">lista_nomes</span><span class="p">)</span>
</code></pre></div></div>
<p>Para o bloco de c√≥digo acima ter√≠amos a seguinte sa√≠da em nosso terminal:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span><span class="s1">'Rafael'</span>, <span class="s1">'Teste'</span>, <span class="s1">'Francisco'</span>, <span class="s1">'Viana'</span>, <span class="s1">'Sanches'</span><span class="o">]</span>
</code></pre></div></div>

<p>Removendo elementos de listas:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#lista vazia
</span><span class="n">lista_nomes</span> <span class="o">=</span> <span class="p">[]</span>

<span class="c1">#adicionando nomes a lista vazia
</span>
<span class="c1">#adicionando elemento na ultima posi√ß√£o da lista
</span><span class="n">lista_nomes</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="s">"Rafael"</span><span class="p">)</span>

<span class="c1">#adicionando elemento na ultima posi√ß√£o da lista
</span><span class="n">lista_nomes</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="s">"Francisco"</span><span class="p">)</span>

<span class="c1">#adicionando elemento na ultima posi√ß√£o da lista
</span><span class="n">lista_nomes</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="s">"Viana"</span><span class="p">)</span>

<span class="c1">#adicionando elemento na ultima posi√ß√£o da lista
</span><span class="n">lista_nomes</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="s">"Sanches"</span><span class="p">)</span>

<span class="c1">#exibindo a lista original
</span><span class="k">print</span><span class="p">(</span><span class="s">"Lista Original: "</span><span class="p">,</span><span class="n">lista_nomes</span><span class="p">)</span>

<span class="n">lista_nomes</span><span class="p">.</span><span class="n">remove</span><span class="p">(</span><span class="s">"Viana"</span><span class="p">)</span>

<span class="c1">#exibindo a lista
</span><span class="k">print</span><span class="p">(</span><span class="s">"Lista Modificada: "</span><span class="p">,</span><span class="n">lista_nomes</span><span class="p">)</span>
</code></pre></div></div>
<p>Para o bloco de c√≥digo acima ter√≠amos a seguinte sa√≠da em nosso terminal:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Lista Original:  <span class="o">[</span><span class="s1">'Rafael'</span>, <span class="s1">'Francisco'</span>, <span class="s1">'Viana'</span>, <span class="s1">'Sanches'</span><span class="o">]</span>
Lista Modificada:  <span class="o">[</span><span class="s1">'Rafael'</span>, <span class="s1">'Francisco'</span>, <span class="s1">'Sanches'</span><span class="o">]</span>
</code></pre></div></div>

<p>Para remover um elemento em uma posi√ß√£o espec√≠fica, usamos a fun√ß√£o <strong>del</strong>. Observe a diferen√ßa em rela√ß√£o √† fun√ß√£o remove, que recebe como par√¢metro o valor que desejamos remover.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#lista vazia
</span><span class="n">lista_nomes</span> <span class="o">=</span> <span class="p">[]</span>

<span class="c1">#adicionando nomes a lista vazia
</span>
<span class="c1">#adicionando elemento na ultima posi√ß√£o da lista
</span><span class="n">lista_nomes</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="s">"Rafael"</span><span class="p">)</span>

<span class="c1">#adicionando elemento na ultima posi√ß√£o da lista
</span><span class="n">lista_nomes</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="s">"Francisco"</span><span class="p">)</span>

<span class="c1">#adicionando elemento na ultima posi√ß√£o da lista
</span><span class="n">lista_nomes</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="s">"Viana"</span><span class="p">)</span>

<span class="c1">#adicionando elemento na ultima posi√ß√£o da lista
</span><span class="n">lista_nomes</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="s">"Sanches"</span><span class="p">)</span>

<span class="c1">#exibindo a lista original
</span><span class="k">print</span><span class="p">(</span><span class="s">"Lista Original: "</span><span class="p">,</span><span class="n">lista_nomes</span><span class="p">)</span>

<span class="k">del</span> <span class="n">lista_nomes</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span>

<span class="c1">#exibindo a lista
</span><span class="k">print</span><span class="p">(</span><span class="s">"Lista Modificada: "</span><span class="p">,</span><span class="n">lista_nomes</span><span class="p">)</span>

</code></pre></div></div>
<p>Para o bloco de c√≥digo acima ter√≠amos a seguinte sa√≠da em nosso terminal:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Lista Original:  <span class="o">[</span><span class="s1">'Rafael'</span>, <span class="s1">'Francisco'</span>, <span class="s1">'Viana'</span>, <span class="s1">'Sanches'</span><span class="o">]</span>
Lista Modificada:  <span class="o">[</span><span class="s1">'Rafael'</span>, <span class="s1">'Francisco'</span>, <span class="s1">'Viana'</span><span class="o">]</span>
</code></pre></div></div>

<p>Exitem ainda muitos outros m√©todos que podemos utilizar com listas e para poder conhece-los abra seu terminal e digite o comando <strong>help(list)</strong>. Segue um exemplo:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Python 3.8.5 <span class="o">(</span>default, Jan 27 2021, 15:41:15<span class="o">)</span>
<span class="o">[</span>GCC 9.3.0] on linux
Type <span class="s2">"help"</span>, <span class="s2">"copyright"</span>, <span class="s2">"credits"</span> or <span class="s2">"license"</span> <span class="k">for </span>more information.
<span class="o">&gt;&gt;&gt;</span> <span class="nb">help</span><span class="o">(</span>list<span class="o">)</span>
</code></pre></div></div>

<h3 id="dicion√°rio">Dicion√°rio:</h3>

<p>Os dicion√°rios s√£o estruturas que n√£o possuem uma ordena√ß√£o espec√≠fica. Os dicion√°rios s√£o representados na forma de chave e valor. A chave √© uma refer√™ncia para o valor de um elemento do dicion√°rio. Veja a seguir alguns exemplos de a√ß√µes que voc√™ pode realizar com dicion√°rios.</p>

<p>Os dicion√°rios s√£o criados colocando os pares <strong>chave</strong> : <strong>valor</strong> entre chaves <strong>{</strong> <strong>}</strong> da seguinte forma:</p>

<p>Criando um dicion√°rio:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#dicion√°rio vazio
</span><span class="n">dicionario</span> <span class="o">=</span> <span class="p">{}</span>

<span class="c1">#imprimindo o conte√∫do do dicion√°rio
</span><span class="k">print</span><span class="p">(</span><span class="s">"Dicion√°rio vazio: "</span><span class="p">,</span><span class="n">dicionario</span><span class="p">)</span>

<span class="c1">#dicion√°rio criado com chaves e valores
</span><span class="n">dicionario</span> <span class="o">=</span> <span class="p">{</span><span class="s">'Rafael'</span><span class="p">:</span> <span class="s">'PYTHON'</span><span class="p">,</span> <span class="s">'Renata'</span><span class="p">:</span> <span class="s">'SQL'</span><span class="p">,</span> <span class="s">'Joao'</span> <span class="p">:</span> <span class="s">'JAVA'</span><span class="p">,</span> <span class="s">'Bruno'</span><span class="p">:</span> <span class="s">'C++'</span><span class="p">,</span> <span class="s">'Ana'</span> <span class="p">:</span> <span class="s">'PHP'</span><span class="p">}</span>

<span class="c1">#acessando itens de um dicion√°rio
</span><span class="k">print</span><span class="p">(</span><span class="n">dicionario</span><span class="p">[</span><span class="s">'Rafael'</span><span class="p">])</span>
<span class="k">print</span><span class="p">(</span><span class="n">dicionario</span><span class="p">[</span><span class="s">'Renata'</span><span class="p">])</span>
<span class="k">print</span><span class="p">(</span><span class="n">dicionario</span><span class="p">[</span><span class="s">'Ana'</span><span class="p">])</span>
</code></pre></div></div>
<p>Para o bloco de c√≥digo acima ter√≠amos a seguinte sa√≠da em nosso terminal:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Dicionario vazio:  <span class="o">{}</span>
PYTHON
SQL
PHP
</code></pre></div></div>

<p>Para recuperar um valor no dicion√°rio podemos usar o m√©todo <strong>get</strong> passando como argumento a chave do valor que queremos recuperar:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#dicion√°rio criado com chave e valores
</span><span class="n">dicionario</span> <span class="o">=</span> <span class="p">{</span><span class="s">'Rafael'</span><span class="p">:</span> <span class="s">'PYTHON'</span><span class="p">,</span> <span class="s">'Renata'</span><span class="p">:</span> <span class="s">'SQL'</span><span class="p">,</span> <span class="s">'Joao'</span> <span class="p">:</span> <span class="s">'JAVA'</span><span class="p">,</span> <span class="s">'Bruno'</span><span class="p">:</span> <span class="s">'C++'</span><span class="p">,</span> <span class="s">'Ana'</span> <span class="p">:</span> <span class="s">'PHP'</span><span class="p">}</span>

<span class="c1">#imprimindo o conte√∫do das chaves Rafael, Renata e Ana usando o m√©todo get
</span><span class="k">print</span><span class="p">(</span><span class="n">dicionario</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="s">'Rafael'</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="n">dicionario</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="s">'Renata'</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="n">dicionario</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="s">'Ana'</span><span class="p">))</span>
</code></pre></div></div>
<p>Para o bloco de c√≥digo acima ter√≠amos a seguinte sa√≠da em nosso terminal:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>PYTHON
SQL
PHP
</code></pre></div></div>

<p>Iterando sobre os itens de um dicion√°rio utilizando o la√ßo de repeti√ß√£o <strong>for</strong>:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">dicionario</span> <span class="o">=</span> <span class="p">{</span><span class="s">'Rafael'</span><span class="p">:</span> <span class="s">'PYTHON'</span><span class="p">,</span> <span class="s">'Renata'</span><span class="p">:</span> <span class="s">'SQL'</span><span class="p">,</span> <span class="s">'Joao'</span> <span class="p">:</span> <span class="s">'JAVA'</span><span class="p">,</span> <span class="s">'Bruno'</span><span class="p">:</span> <span class="s">'C++'</span><span class="p">,</span> <span class="s">'Ana'</span> <span class="p">:</span> <span class="s">'PHP'</span><span class="p">}</span>

<span class="k">for</span> <span class="n">chave</span> <span class="ow">in</span> <span class="n">dicionario</span><span class="p">:</span>
  <span class="k">print</span><span class="p">(</span><span class="n">chave</span><span class="p">,</span> <span class="s">'programa em:'</span><span class="p">,</span> <span class="n">dicionario</span><span class="p">[</span><span class="n">chave</span><span class="p">])</span>
</code></pre></div></div>
<p>Para o bloco de c√≥digo acima ter√≠amos a seguinte sa√≠da em nosso terminal:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Rafael programa em: PYTHON
Renata programa em: SQL
Joao programa em: JAVA
Bruno programa em: C++
Ana programa em: PHP
</code></pre></div></div>

<p>Para alterar uma valor em um dicion√°rio use o nome do dicion√°rio com a chave entre colchetes e associe um <strong>novo valor</strong> a <strong>chave</strong>:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#dicion√°rio criado com chaves e valores
</span><span class="n">dicionario</span> <span class="o">=</span> <span class="p">{</span><span class="s">'Rafael'</span><span class="p">:</span> <span class="s">'PYTHON'</span><span class="p">,</span> <span class="s">'Renata'</span><span class="p">:</span> <span class="s">'SQL'</span><span class="p">,</span> <span class="s">'Joao'</span> <span class="p">:</span> <span class="s">'JAVA'</span><span class="p">,</span> <span class="s">'Bruno'</span><span class="p">:</span> <span class="s">'C++'</span><span class="p">,</span> <span class="s">'Ana'</span> <span class="p">:</span> <span class="s">'PHP'</span><span class="p">}</span>

<span class="k">print</span><span class="p">(</span><span class="s">"Antes da altera√ß√£o: "</span><span class="p">,</span><span class="n">dicionario</span><span class="p">)</span>

<span class="n">dicionario</span><span class="p">[</span><span class="s">'Rafael'</span><span class="p">]</span> <span class="o">=</span> <span class="s">'Ruby'</span>

<span class="k">print</span><span class="p">(</span><span class="s">"Depois da altera√ß√£o: "</span><span class="p">,</span><span class="n">dicionario</span><span class="p">)</span>
</code></pre></div></div>
<p>Para o bloco de c√≥digo acima ter√≠amos a seguinte sa√≠da em nosso terminal:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Antes da altera√ß√£o:  <span class="o">{</span><span class="s1">'Rafael'</span>: <span class="s1">'PYTHON'</span>, <span class="s1">'Renata'</span>: <span class="s1">'SQL'</span>, <span class="s1">'Joao'</span>: <span class="s1">'JAVA'</span>, <span class="s1">'Bruno'</span>: <span class="s1">'C++'</span>, <span class="s1">'Ana'</span>: <span class="s1">'PHP'</span><span class="o">}</span>
Depois da altera√ß√£o:  <span class="o">{</span><span class="s1">'Rafael'</span>: <span class="s1">'Ruby'</span>, <span class="s1">'Renata'</span>: <span class="s1">'SQL'</span>, <span class="s1">'Joao'</span>: <span class="s1">'JAVA'</span>, <span class="s1">'Bruno'</span>: <span class="s1">'C++'</span>, <span class="s1">'Ana'</span>: <span class="s1">'PHP'</span><span class="o">}</span>
</code></pre></div></div>

<p>Para inserir um novo item em um dicion√°rio basta declarar o dicion√°rio colocando entre colchetes a <strong>nova chave</strong> e <strong>atribuindo um valor a ela</strong>:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#dicion√°rio criado com chaves e valores
</span><span class="n">dicionario</span> <span class="o">=</span> <span class="p">{</span><span class="s">'Rafael'</span><span class="p">:</span> <span class="s">'PYTHON'</span><span class="p">,</span> <span class="s">'Renata'</span><span class="p">:</span> <span class="s">'SQL'</span><span class="p">,</span> <span class="s">'Joao'</span> <span class="p">:</span> <span class="s">'JAVA'</span><span class="p">,</span> <span class="s">'Bruno'</span><span class="p">:</span> <span class="s">'C++'</span><span class="p">,</span> <span class="s">'Ana'</span> <span class="p">:</span> <span class="s">'PHP'</span><span class="p">}</span>

<span class="k">print</span><span class="p">(</span><span class="s">"Antes da altera√ß√£o: "</span><span class="p">,</span><span class="n">dicionario</span><span class="p">)</span>

<span class="n">dicionario</span><span class="p">[</span><span class="s">'Joelson'</span><span class="p">]</span> <span class="o">=</span> <span class="s">'C#'</span>

<span class="k">print</span><span class="p">(</span><span class="s">"Depois da altera√ß√£o: "</span><span class="p">,</span><span class="n">dicionario</span><span class="p">)</span>
</code></pre></div></div>
<p>Para o bloco de c√≥digo acima ter√≠amos a seguinte sa√≠da em nosso terminal:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Antes da altera√ß√£o:  <span class="o">{</span><span class="s1">'Rafael'</span>: <span class="s1">'PYTHON'</span>, <span class="s1">'Renata'</span>: <span class="s1">'SQL'</span>, <span class="s1">'Joao'</span>: <span class="s1">'JAVA'</span>, <span class="s1">'Bruno'</span>: <span class="s1">'C++'</span>, <span class="s1">'Ana'</span>: <span class="s1">'PHP'</span><span class="o">}</span>
Depois da altera√ß√£o:  <span class="o">{</span><span class="s1">'Rafael'</span>: <span class="s1">'PYTHON'</span>, <span class="s1">'Renata'</span>: <span class="s1">'SQL'</span>, <span class="s1">'Joao'</span>: <span class="s1">'JAVA'</span>, <span class="s1">'Bruno'</span>: <span class="s1">'C++'</span>, <span class="s1">'Ana'</span>: <span class="s1">'PHP'</span>, <span class="s1">'Joelson'</span>: <span class="s1">'C#'</span><span class="o">}</span>
</code></pre></div></div>

<p>Inserindo itens novos ou alterando itens j√° existentes em um dicion√°rio com o m√©todo <strong>update()</strong>.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#dicion√°rio criado com chaves e valores
</span><span class="n">dicionario</span> <span class="o">=</span> <span class="p">{</span><span class="s">'Rafael'</span><span class="p">:</span> <span class="s">'PYTHON'</span><span class="p">,</span> <span class="s">'Renata'</span><span class="p">:</span> <span class="s">'SQL'</span><span class="p">,</span> <span class="s">'Joao'</span> <span class="p">:</span> <span class="s">'JAVA'</span><span class="p">,</span> <span class="s">'Bruno'</span><span class="p">:</span> <span class="s">'C++'</span><span class="p">,</span> <span class="s">'Ana'</span> <span class="p">:</span> <span class="s">'PHP'</span><span class="p">}</span>

<span class="k">print</span><span class="p">(</span><span class="s">"Antes da altera√ß√£o: "</span><span class="p">,</span><span class="n">dicionario</span><span class="p">)</span>

<span class="c1"># Chave n√£o existe no dicionario. Nesse caso ocorre automaticamente uma inser√ß√£o no dicion√°rio ou seja, um novo conjunto de chave e valor √© adicionado ao dicion√°rio.
</span><span class="n">dicionario</span><span class="p">.</span><span class="n">update</span><span class="p">({</span><span class="s">'Joelson'</span><span class="p">:</span><span class="s">'C#'</span><span class="p">})</span>

<span class="k">print</span><span class="p">(</span><span class="s">"Depois da altera√ß√£o: "</span><span class="p">,</span><span class="n">dicionario</span><span class="p">)</span>

<span class="c1"># Chave j√° existe no dicionario. Nesse caso ocorre automaticamente uma atualiza√ß√£o no dicion√°rio ou seja, um novo valor √© atribu√≠do a uma chave que j√° est√° no dicion√°rio.
</span>
<span class="n">dicionario</span><span class="p">.</span><span class="n">update</span><span class="p">({</span><span class="s">'Rafael'</span><span class="p">:</span><span class="s">'R'</span><span class="p">})</span>

<span class="k">print</span><span class="p">(</span><span class="s">"Depois da altera√ß√£o: "</span><span class="p">,</span><span class="n">dicionario</span><span class="p">)</span>
</code></pre></div></div>
<p>Para o bloco de c√≥digo acima ter√≠amos a seguinte sa√≠da em nosso terminal:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Antes da altera√ß√£o:  <span class="o">{</span><span class="s1">'Rafael'</span>: <span class="s1">'PYTHON'</span>, <span class="s1">'Renata'</span>: <span class="s1">'SQL'</span>, <span class="s1">'Joao'</span>: <span class="s1">'JAVA'</span>, <span class="s1">'Bruno'</span>: <span class="s1">'C++'</span>, <span class="s1">'Ana'</span>: <span class="s1">'PHP'</span><span class="o">}</span>
Depois da altera√ß√£o:  <span class="o">{</span><span class="s1">'Rafael'</span>: <span class="s1">'PYTHON'</span>, <span class="s1">'Renata'</span>: <span class="s1">'SQL'</span>, <span class="s1">'Joao'</span>: <span class="s1">'JAVA'</span>, <span class="s1">'Bruno'</span>: <span class="s1">'C++'</span>, <span class="s1">'Ana'</span>: <span class="s1">'PHP'</span>, <span class="s1">'Joelson'</span>: <span class="s1">'C#'</span><span class="o">}</span>
Depois da altera√ß√£o:  <span class="o">{</span><span class="s1">'Rafael'</span>: <span class="s1">'R'</span>, <span class="s1">'Renata'</span>: <span class="s1">'SQL'</span>, <span class="s1">'Joao'</span>: <span class="s1">'JAVA'</span>, <span class="s1">'Bruno'</span>: <span class="s1">'C++'</span>, <span class="s1">'Ana'</span>: <span class="s1">'PHP'</span>, <span class="s1">'Joelson'</span>: <span class="s1">'C#'</span><span class="o">}</span>
</code></pre></div></div>

<p>Removendo um par chave e valor de um dicion√°rio usando o comando <strong>del</strong>:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#dicion√°rio criado com chaves e valores
</span><span class="n">dicionario</span> <span class="o">=</span> <span class="p">{</span><span class="s">'Rafael'</span><span class="p">:</span> <span class="s">'PYTHON'</span><span class="p">,</span> <span class="s">'Renata'</span><span class="p">:</span> <span class="s">'SQL'</span><span class="p">,</span> <span class="s">'Joao'</span> <span class="p">:</span> <span class="s">'JAVA'</span><span class="p">,</span> <span class="s">'Bruno'</span><span class="p">:</span> <span class="s">'C++'</span><span class="p">,</span> <span class="s">'Ana'</span> <span class="p">:</span> <span class="s">'PHP'</span><span class="p">}</span>

<span class="k">print</span><span class="p">(</span><span class="s">"Antes da altera√ß√£o: "</span><span class="p">,</span><span class="n">dicionario</span><span class="p">)</span>

<span class="k">del</span> <span class="n">dicionario</span><span class="p">[</span><span class="s">'Bruno'</span><span class="p">]</span>

<span class="k">print</span><span class="p">(</span><span class="s">"Depois da altera√ß√£o: "</span><span class="p">,</span><span class="n">dicionario</span><span class="p">)</span>
</code></pre></div></div>
<p>Para o bloco de c√≥digo acima ter√≠amos a seguinte sa√≠da em nosso terminal:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Antes da altera√ß√£o:  <span class="o">{</span><span class="s1">'Rafael'</span>: <span class="s1">'PYTHON'</span>, <span class="s1">'Renata'</span>: <span class="s1">'SQL'</span>, <span class="s1">'Joao'</span>: <span class="s1">'JAVA'</span>, <span class="s1">'Bruno'</span>: <span class="s1">'C++'</span>, <span class="s1">'Ana'</span>: <span class="s1">'PHP'</span><span class="o">}</span>
Depois da altera√ß√£o:  <span class="o">{</span><span class="s1">'Rafael'</span>: <span class="s1">'PYTHON'</span>, <span class="s1">'Renata'</span>: <span class="s1">'SQL'</span>, <span class="s1">'Joao'</span>: <span class="s1">'JAVA'</span>, <span class="s1">'Ana'</span>: <span class="s1">'PHP'</span><span class="o">}</span>
</code></pre></div></div>

<p>Removendo e obtendo um par chave, valor com o m√©todo <strong>pop()</strong>:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#dicion√°rio criado com chaves e valores
</span><span class="n">dicionario</span> <span class="o">=</span> <span class="p">{</span><span class="s">'Rafael'</span><span class="p">:</span> <span class="s">'PYTHON'</span><span class="p">,</span> <span class="s">'Renata'</span><span class="p">:</span> <span class="s">'SQL'</span><span class="p">,</span> <span class="s">'Joao'</span> <span class="p">:</span> <span class="s">'JAVA'</span><span class="p">,</span> <span class="s">'Bruno'</span><span class="p">:</span> <span class="s">'C++'</span><span class="p">,</span> <span class="s">'Ana'</span> <span class="p">:</span> <span class="s">'PHP'</span><span class="p">}</span>

<span class="k">print</span><span class="p">(</span><span class="s">"Antes da altera√ß√£o: "</span><span class="p">,</span><span class="n">dicionario</span><span class="p">)</span>

<span class="n">dicionario</span><span class="p">.</span><span class="n">pop</span><span class="p">(</span><span class="s">'Renata'</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="s">"Depois da altera√ß√£o: "</span><span class="p">,</span><span class="n">dicionario</span><span class="p">)</span>
</code></pre></div></div>
<p>Para o bloco de c√≥digo acima ter√≠amos a seguinte sa√≠da em nosso terminal:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Antes da altera√ß√£o:  <span class="o">{</span><span class="s1">'Rafael'</span>: <span class="s1">'PYTHON'</span>, <span class="s1">'Renata'</span>: <span class="s1">'SQL'</span>, <span class="s1">'Joao'</span>: <span class="s1">'JAVA'</span>, <span class="s1">'Bruno'</span>: <span class="s1">'C++'</span>, <span class="s1">'Ana'</span>: <span class="s1">'PHP'</span><span class="o">}</span>
Depois da altera√ß√£o:  <span class="o">{</span><span class="s1">'Rafael'</span>: <span class="s1">'PYTHON'</span>, <span class="s1">'Joao'</span>: <span class="s1">'JAVA'</span>, <span class="s1">'Bruno'</span>: <span class="s1">'C++'</span>, <span class="s1">'Ana'</span>: <span class="s1">'PHP'</span><span class="o">}</span>
</code></pre></div></div>

<p>Para poder entender o seu dicion√°rio ou o dicion√°rio que outra pessoa tenha criado, voc√™ pode usufruir de alguns m√©todos sendo eles:</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Nome do m√©todo</th>
      <th style="text-align: center">O que ele faz?</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">keys()</td>
      <td style="text-align: center">Ele retorna todas as chaves de um dicion√°rio</td>
    </tr>
    <tr>
      <td style="text-align: center">values()</td>
      <td style="text-align: center">Ele retorna todos os valores de um dicion√°rio</td>
    </tr>
    <tr>
      <td style="text-align: center">items()</td>
      <td style="text-align: center">Ele retorna todos os pares de chave e valor de um dicion√°rio</td>
    </tr>
  </tbody>
</table>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#dicion√°rio criado com chaves e valores
</span><span class="n">dicionario</span> <span class="o">=</span> <span class="p">{</span><span class="s">'Rafael'</span><span class="p">:</span> <span class="s">'PYTHON'</span><span class="p">,</span> <span class="s">'Renata'</span><span class="p">:</span> <span class="s">'SQL'</span><span class="p">,</span> <span class="s">'Joao'</span> <span class="p">:</span> <span class="s">'JAVA'</span><span class="p">,</span> <span class="s">'Bruno'</span><span class="p">:</span> <span class="s">'C++'</span><span class="p">,</span> <span class="s">'Ana'</span> <span class="p">:</span> <span class="s">'PHP'</span><span class="p">}</span>

<span class="k">print</span><span class="p">(</span><span class="s">"Todas as chaves: "</span><span class="p">,</span><span class="n">dicionario</span><span class="p">.</span><span class="n">keys</span><span class="p">())</span>
<span class="k">print</span><span class="p">(</span><span class="s">"Todos os valores: "</span><span class="p">,</span><span class="n">dicionario</span><span class="p">.</span><span class="n">values</span><span class="p">())</span>
<span class="k">print</span><span class="p">(</span><span class="s">"Todos os pares de (chave, valor): "</span><span class="p">,</span><span class="n">dicionario</span><span class="p">.</span><span class="n">items</span><span class="p">())</span>

</code></pre></div></div>
<p>Para o bloco de c√≥digo acima ter√≠amos a seguinte sa√≠da em nosso terminal:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Todas as chaves:  dict_keys<span class="o">([</span><span class="s1">'Rafael'</span>, <span class="s1">'Renata'</span>, <span class="s1">'Joao'</span>, <span class="s1">'Bruno'</span>, <span class="s1">'Ana'</span><span class="o">])</span>
Todos os valores:  dict_values<span class="o">([</span><span class="s1">'PYTHON'</span>, <span class="s1">'SQL'</span>, <span class="s1">'JAVA'</span>, <span class="s1">'C++'</span>, <span class="s1">'PHP'</span><span class="o">])</span>
Todos os pares de <span class="o">(</span>chave, valor<span class="o">)</span>:  dict_items<span class="o">([(</span><span class="s1">'Rafael'</span>, <span class="s1">'PYTHON'</span><span class="o">)</span>, <span class="o">(</span><span class="s1">'Renata'</span>, <span class="s1">'SQL'</span><span class="o">)</span>, <span class="o">(</span><span class="s1">'Joao'</span>, <span class="s1">'JAVA'</span><span class="o">)</span>, <span class="o">(</span><span class="s1">'Bruno'</span>, <span class="s1">'C++'</span><span class="o">)</span>, <span class="o">(</span><span class="s1">'Ana'</span>, <span class="s1">'PHP'</span><span class="o">)])</span>
</code></pre></div></div>

<p>Vale ressaltar que os comandos utilizados acima retornam para o m√©todo <strong>keys()</strong> uma lista com as chaves existentes no dicion√°rio. Para o m√©todo <strong>values()</strong>, retorna-se uma lista com os valores do dicion√°rio. O m√©todo <strong>items()</strong> ele √© um pouco diferente pois ele retorna uma lista que seus elementos por sua vez possuem tuplas como valores onde o primeiro elemento de cada tupla representa a chave e o segundo elemento o valor relacionado a respectiva chave do primeiro elemento.</p>

<h3 id="conjunto">Conjunto:</h3>

<p>Os conjuntos s√£o tipos de dados que tem algumas peculiaridades assim como as outras estruturas de dados j√° estudadas por aqui. Em Conjuntos os seus itens n√£o s√£o ordenados e tamb√©m n√£o podem ser alterados e n√£o √© permitido a ocorr√™ncia de valores duplicados.</p>

<p>Os itens que s√£o definidos em um conjunto podem aparecer em uma ordem diferente cada vez que voc√™ os usa e n√£o podem ser referenciados por √≠ndice ou chave.</p>

<p>Os conjuntos tamb√©m s√£o imut√°veis, o que significa que n√£o podemos alterar os seus itens ap√≥s a  sua cria√ß√£o.</p>

<p>Outro detalhe √© que ap√≥s criar um conjunto, voc√™ n√£o pode alterar seus itens, mas pode adicionar novos itens.</p>

<p>Os conjuntos n√£o podem ter dois itens ou mais com o mesmo valor.</p>

<p>Criando um conjunto:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#Conjunto criado com com alguns n√∫mero do tipo Inteiro e que tem algumas repeti√ß√µes entre eles
</span><span class="n">conjunto_A</span> <span class="o">=</span> <span class="p">{</span><span class="mi">1</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">75</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">45</span><span class="p">,</span> <span class="mi">3</span><span class="p">}</span>
<span class="k">print</span><span class="p">(</span><span class="n">conjunto_A</span><span class="p">)</span>
</code></pre></div></div>
<p>Para o bloco de c√≥digo acima ter√≠amos a seguinte sa√≠da em nosso terminal:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">{</span>1, 2, 3, 5, 75, 12, 45<span class="o">}</span>
</code></pre></div></div>
<p>Como foi poss√≠vel observar no exemplo utilizado acima, o n√∫mero <strong>12</strong> que possu√≠a duplicidade dentro do conjunto foi automaticamente removido e apenas 1 ocorr√™ncia permaneceu depois de sua cria√ß√£o.</p>

<p>Descobrindo o tamanho de um conjunto:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">print</span><span class="p">(</span><span class="s">'Tamanho do conjunto: '</span><span class="p">,</span><span class="nb">len</span><span class="p">(</span><span class="n">conjunto_A</span><span class="p">))</span>

</code></pre></div></div>
<p>Para o bloco de c√≥digo acima ter√≠amos a seguinte sa√≠da em nosso terminal:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Tamanho <span class="k">do </span>conjunto:  7
</code></pre></div></div>
<p>Para descobrir se o tipo de dados que voc√™ criou √© um conjunto voc√™ pode usar:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># fun√ß√£o type retorna o tipo de qualquer vari√°vel
</span><span class="k">print</span><span class="p">(</span><span class="s">'Tipo: '</span><span class="p">,</span><span class="nb">type</span><span class="p">(</span><span class="n">conjunto_A</span><span class="p">))</span>
</code></pre></div></div>
<p>Para o bloco de c√≥digo acima ter√≠amos a seguinte sa√≠da em nosso terminal:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Tipo:  &lt;class <span class="s1">'set'</span><span class="o">&gt;</span>
</code></pre></div></div>

<p>Acessando itens no conjunto:</p>

<p>Voc√™ n√£o pode acessar itens em um conjunto referindo-se a um √≠ndice ou chave. Nesse caso voc√™ pode percorrer os itens do conjunto por meio de um la√ßo de repeti√ß√£o <strong>for</strong>, ou voc√™ pode verificar se um item especifico est√° presente em um conjunto, usando a palavra-chave reservada <strong>in</strong>.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#Conjunto criado com com alguns n√∫mero do tipo Inteiro e que tem algumas repeti√ß√µes entre eles
</span><span class="n">conjunto_A</span> <span class="o">=</span> <span class="p">{</span><span class="mi">1</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">75</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">45</span><span class="p">,</span> <span class="mi">3</span><span class="p">}</span>
<span class="k">print</span><span class="p">(</span><span class="n">conjunto_A</span><span class="p">)</span>

<span class="c1">#iterando sobre o conjunto e acessando seu itens
</span><span class="k">for</span> <span class="n">item</span> <span class="ow">in</span> <span class="n">conjunto_A</span><span class="p">:</span>
  <span class="k">print</span><span class="p">(</span><span class="s">"Item: "</span><span class="p">,</span><span class="n">item</span><span class="p">)</span>

</code></pre></div></div>
<p>Para o bloco de c√≥digo acima ter√≠amos a seguinte sa√≠da em nosso terminal:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">{</span>1, 2, 3, 5, 75, 12, 45<span class="o">}</span>
Item:  1
Item:  2
Item:  3
Item:  5
Item:  75
Item:  12
Item:  45
</code></pre></div></div>

<p>Verificando se um valor/item existe dentro do conjunto:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#Conjunto criado com com alguns n√∫mero do tipo Inteiro e que tem algumas repeti√ß√µes entre eles
</span><span class="n">conjunto_A</span> <span class="o">=</span> <span class="p">{</span><span class="mi">1</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">75</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">45</span><span class="p">,</span> <span class="mi">3</span><span class="p">}</span>
<span class="k">print</span><span class="p">(</span><span class="n">conjunto_A</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="mi">7</span> <span class="ow">in</span> <span class="n">conjunto_A</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="mi">5</span> <span class="ow">in</span> <span class="n">conjunto_A</span><span class="p">)</span>
</code></pre></div></div>
<p>Para o bloco de c√≥digo acima ter√≠amos a seguinte sa√≠da em nosso terminal:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">{</span>1, 2, 3, 5, 75, 12, 45<span class="o">}</span>
False
True
</code></pre></div></div>

<p>Adicionando itens ao conjunto depois de ele j√° estar criado:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#Conjunto criado com com alguns n√∫mero do tipo Inteiro e que tem algumas repeti√ß√µes entre eles
</span><span class="n">conjunto_A</span> <span class="o">=</span> <span class="p">{</span><span class="mi">1</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">75</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">45</span><span class="p">,</span> <span class="mi">3</span><span class="p">}</span>
<span class="k">print</span><span class="p">(</span><span class="s">"Conjunto Original: "</span><span class="p">,</span><span class="n">conjunto_A</span><span class="p">)</span>

<span class="c1">#utilize a fun√ß√£o add() para adicionar novos itens ao conjunto depois de criado
</span><span class="n">conjunto_A</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="mi">23</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="s">"Conjunto Modificado: "</span><span class="p">,</span><span class="n">conjunto_A</span><span class="p">)</span>
</code></pre></div></div>
<p>Para o bloco de c√≥digo acima ter√≠amos a seguinte sa√≠da em nosso terminal:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Conjunto Original:  <span class="o">{</span>1, 2, 3, 5, 75, 12, 45<span class="o">}</span>
Conjunto Modificado:  <span class="o">{</span>1, 2, 3, 5, 75, 12, 45, 23<span class="o">}</span>
</code></pre></div></div>

<p>Para adicionar um conjunto a outro conjunto j√° criado fa√ßa:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#Conjunto criado com com alguns n√∫mero do tipo Inteiro e que tem algumas repeti√ß√µes entre eles
</span><span class="n">conjunto_A</span> <span class="o">=</span> <span class="p">{</span><span class="mi">1</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">75</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">45</span><span class="p">,</span> <span class="mi">3</span><span class="p">}</span>
<span class="k">print</span><span class="p">(</span><span class="s">"Conjunto A: "</span><span class="p">,</span><span class="n">conjunto_A</span><span class="p">)</span>

<span class="n">conjunto_B</span> <span class="o">=</span> <span class="p">{</span><span class="mi">99</span><span class="p">,</span> <span class="mi">123</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">29</span><span class="p">,</span> <span class="mi">757</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">458</span><span class="p">,</span> <span class="mi">3</span><span class="p">}</span>
<span class="k">print</span><span class="p">(</span><span class="s">"Conjunto B: "</span><span class="p">,</span><span class="n">conjunto_B</span><span class="p">)</span>

<span class="n">conjunto_A</span><span class="p">.</span><span class="n">update</span><span class="p">(</span><span class="n">conjunto_B</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">conjunto_A</span><span class="p">)</span>
</code></pre></div></div>
<p>Para o bloco de c√≥digo acima ter√≠amos a seguinte sa√≠da em nosso terminal:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Conjunto A:  <span class="o">{</span>1, 2, 3, 5, 75, 12, 45<span class="o">}</span>
Conjunto B:  <span class="o">{</span>99, 3, 5, 458, 12, 757, 123, 29<span class="o">}</span>
<span class="o">{</span>1, 2, 3, 99, 5, 458, 75, 12, 45, 757, 123, 29<span class="o">}</span>
</code></pre></div></div>

<p>Vale ressaltar que par√¢metro da fun√ß√£o update() n√£o precisa ser necessariamente um Conjunto e ele pode ser qualquer estrutura de dados iter√°vel (e.g., tuplas, listas, dicion√°rios etc.).</p>

<p>Para remover elementos de um conjunto voc√™ pode utilizar de quatro fun√ß√µes:</p>

<p>As fun√ß√µes remove() e discard() voc√™ precisa passar para elas por par√¢metro o item que voc√™ deseja remover. A fun√ß√£o pop() diferente das anteriores sempre ir√° remover o √∫ltimo elemento do Conjunto (i.e., o elemento mais velho do conjunto ou em todo caso o primeiro que foi criado no conjunto) e ela n√£o precisa de par√¢metro.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#Conjunto criado com com alguns n√∫mero do tipo Inteiro e que tem algumas repeti√ß√µes entre eles
</span><span class="n">conjunto_A</span> <span class="o">=</span> <span class="p">{</span><span class="mi">1</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">75</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">45</span><span class="p">,</span> <span class="mi">3</span><span class="p">}</span>
<span class="k">print</span><span class="p">(</span><span class="s">"Conjunto A: "</span><span class="p">,</span><span class="n">conjunto_A</span><span class="p">)</span>

<span class="n">conjunto_B</span> <span class="o">=</span> <span class="p">{</span><span class="mi">99</span><span class="p">,</span> <span class="mi">123</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">29</span><span class="p">,</span> <span class="mi">757</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">458</span><span class="p">,</span> <span class="mi">3</span><span class="p">}</span>
<span class="k">print</span><span class="p">(</span><span class="s">"Conjunto B: "</span><span class="p">,</span><span class="n">conjunto_B</span><span class="p">)</span>

<span class="n">conjunto_A</span><span class="p">.</span><span class="n">remove</span><span class="p">(</span><span class="mi">12</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">"Conjunto A novo: "</span><span class="p">,</span><span class="n">conjunto_A</span><span class="p">)</span>

<span class="n">conjunto_B</span><span class="p">.</span><span class="n">discard</span><span class="p">(</span><span class="mi">29</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">"Conjunto B novo: "</span><span class="p">,</span><span class="n">conjunto_B</span><span class="p">)</span>

<span class="n">conjunto_A</span><span class="p">.</span><span class="n">pop</span><span class="p">()</span>
<span class="k">print</span><span class="p">(</span><span class="s">"Conjunto A novo: "</span><span class="p">,</span><span class="n">conjunto_A</span><span class="p">)</span>

</code></pre></div></div>
<p>Para o bloco de c√≥digo acima ter√≠amos a seguinte sa√≠da em nosso terminal:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Conjunto A:  <span class="o">{</span>1, 2, 3, 5, 75, 12, 45<span class="o">}</span>
Conjunto B:  <span class="o">{</span>99, 3, 5, 458, 12, 757, 123, 29<span class="o">}</span>
Conjunto A novo:  <span class="o">{</span>1, 2, 3, 5, 75, 45<span class="o">}</span>
Conjunto B novo:  <span class="o">{</span>99, 3, 5, 458, 12, 757, 123<span class="o">}</span>
Conjunto A novo:  <span class="o">{</span>2, 3, 5, 75, 45<span class="o">}</span>
</code></pre></div></div>

<p>Para limpar um conjunto voc√™ pode utilizar a fun√ß√£o <strong>clear()</strong> e para deletar um conjunto completamente da mem√≥ria do computador voc√™ pode utilizar a palavra reservada <strong>del</strong>.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#Conjunto criado com com alguns n√∫mero do tipo Inteiro e que tem algumas repeti√ß√µes entre eles
</span><span class="n">conjunto_A</span> <span class="o">=</span> <span class="p">{</span><span class="mi">1</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">75</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">45</span><span class="p">,</span> <span class="mi">3</span><span class="p">}</span>
<span class="k">print</span><span class="p">(</span><span class="s">"Conjunto A: "</span><span class="p">,</span><span class="n">conjunto_A</span><span class="p">)</span>

<span class="n">conjunto_B</span> <span class="o">=</span> <span class="p">{</span><span class="mi">99</span><span class="p">,</span> <span class="mi">123</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">29</span><span class="p">,</span> <span class="mi">757</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">458</span><span class="p">,</span> <span class="mi">3</span><span class="p">}</span>
<span class="k">print</span><span class="p">(</span><span class="s">"Conjunto B: "</span><span class="p">,</span><span class="n">conjunto_B</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="s">"Conjunto A: "</span><span class="p">,</span><span class="n">conjunto_A</span><span class="p">.</span><span class="n">clear</span><span class="p">())</span>

<span class="k">del</span> <span class="n">conjunto_B</span>
<span class="k">print</span><span class="p">(</span><span class="s">"Conjunto B: "</span><span class="p">,</span><span class="n">conjunto_B</span><span class="p">)</span>

</code></pre></div></div>
<p>Para o bloco de c√≥digo acima ter√≠amos a seguinte sa√≠da em nosso terminal:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Conjunto A:  <span class="o">{</span>1, 2, 3, 5, 75, 12, 45<span class="o">}</span>
Conjunto B:  <span class="o">{</span>99, 3, 5, 458, 12, 757, 123, 29<span class="o">}</span>
Conjunto A:  None
Traceback <span class="o">(</span>most recent call last<span class="o">)</span>:
  File <span class="s2">"main.py"</span>, line 12, <span class="k">in</span> &lt;module&gt;
    print<span class="o">(</span><span class="s2">"Conjunto B: "</span>,conjunto_B<span class="o">)</span>
NameError: name <span class="s1">'conjunto_B'</span> is not defined
</code></pre></div></div>

<p>Exitem outras fun√ß√µes n√£o mencionadas aqui que voc√™ pode encontrar na documenta√ß√£o da linguagem python assim como:</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Nome do m√©todo/fun√ß√£o</th>
      <th style="text-align: center">O que ele faz?</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">difference()</td>
      <td style="text-align: center">Retorna um conjunto contendo a diferen√ßa entre dois ou mais conjuntos</td>
    </tr>
    <tr>
      <td style="text-align: center">difference_update()</td>
      <td style="text-align: center">Remove os itens neste conjunto que tamb√©m est√£o inclu√≠dos em outro, especificado</td>
    </tr>
    <tr>
      <td style="text-align: center">intersection()</td>
      <td style="text-align: center">Retorna um conjunto, que √© a interse√ß√£o de dois outros conjuntos</td>
    </tr>
    <tr>
      <td style="text-align: center">intersection_update()</td>
      <td style="text-align: center">Remove os itens no conjunto que chama essa fun√ß√£o e que n√£o est√£o presentes em outros conjuntos especificados/utilizados</td>
    </tr>
    <tr>
      <td style="text-align: center">union()</td>
      <td style="text-align: center">Retorna um conjunto contendo a uni√£o dos conjuntos</td>
    </tr>
  </tbody>
</table>

<p>Exerc√≠cios para praticar o que aprendeu:</p>

<ol>
  <li>
    <p>Crie um programa em python que solicite ao usu√°rio do computador 5 nomes diferentes que comecem com a primeira letra diferentes e a sua tarefa ser√° ordenar essa lista por ordem alfab√©tica.</p>
  </li>
  <li>Crie um programa que simule um sistema de banco e para esse sistema voc√™ ir√° criar:</li>
  <li>Crie um programa que forne√ßa ao usu√°rio do computador as seguintes op√ß√µes: Cadastrar, Atualizar, Credito e a op√ß√£o Debito.</li>
  <li>Crie um programa que quando o usu√°rio solicitar a op√ß√£o Cadastrar ele precise informar: Nome, Sobrenome, CPF, Idade e Saldo.</li>
  <li>Crie um programa que quando o usu√°rio solicitar a op√ß√£o Atualizar ele precise informar o seu CPF e a partir desse ponto as informa√ß√µes de Nome, Sobrenome, Idade possam ser atualizadas.</li>
  <li>Crie um programa que quando o usu√°rio solicitar a op√ß√£o Credito seja solicitado a ele a quantia em reais que ele deseja armazenar na sua conta bancaria nesse mini sistema.</li>
  <li>
    <p>Crie um programa que quando o usu√°rio solicitar a op√ß√£o Debito seja solicitado a ele a quantia em reais que sa√≠ra da sua conta bancaria.</p>
  </li>
  <li>
    <p>Em complemento ao sistema do exerc√≠cio 2, crie um programa que adicione a lista de op√ß√µes do sistema a op√ß√£o de Remover. Essa op√ß√£o ir√° solicitar o CPF do usu√°rio que ira ser removido desse sistema e ap√≥s a confirma√ß√£o dessa a√ß√£o esse cliente do banco n√£o dever√° mais estar no mini sistema cadastrado.</p>
  </li>
  <li>
    <p>Em complemento ao sistema do exerc√≠cio 2, crie um programa que adicione a lista de op√ß√µes do sistema a op√ß√£o de Listar. Essa op√ß√£o ir√° listar na tela todos os clientes cadastrados nesse sistema apresentando todos os dados dos clientes.</p>
  </li>
  <li>
    <p>Em complemento ao sistema do exerc√≠cio 2, crie um programa que adicione a lista de op√ß√µes do sistema a op√ß√£o de Procurar. Essa op√ß√£o ir√° solicitar o CPF do cliente e com esse dados voc√™ dever√° retornar as informa√ß√µes desse cliente na tela.</p>
  </li>
  <li>
    <p>Em complemento ao sistema do exerc√≠cio 2, imagine que agora o gerente tamb√©m quer utilizar esse sistema para verificar alguma informa√ß√µes importantes para ele como gestor. Crie um programa que adicione a lista de op√ß√µes do sistema a op√ß√£o de Maior Saldo. Ao acionar essa op√ß√£o o sistema ir√° verificar e retornar na tela para o gerente o cliente que tenha o saldo mais alto entre seus clientes.</p>
  </li>
  <li>
    <p>Seguindo a mesma linha do exerc√≠cio 6, nesse exerc√≠cio voc√™ deve adicionar a lista de op√ß√µes do sistema a op√ß√£o de Menor Saldo. E buscar e apresentar na tela o cliente com o menor saldo dentro do sistema.</p>
  </li>
  <li>
    <p>Ainda tentando ajudar o gerente, agora ele precisa que voc√™ crie um programa que traga para ele o valor total de dinheiro guardado no banco. Nesse exerc√≠cio voc√™ deve adicionar a lista de op√ß√µes do sistema a op√ß√£o de Saldo Total.</p>
  </li>
  <li>Crie um programa que adicione a lista de op√ß√µes do sistema a op√ß√£o de Ranking Saldo. Nesse exerc√≠cio voc√™ precisa listar todos os clientes mas usando como crit√©rio de ordem de exibi√ß√£o dos dados do cliente com maior saldo para o com menor saldo.</li>
</ol>

<p>Se ficar com alguma d√∫vida ou precisar de ajuda fique a vontade para nos mandar uma mensagem.</p>
:ET