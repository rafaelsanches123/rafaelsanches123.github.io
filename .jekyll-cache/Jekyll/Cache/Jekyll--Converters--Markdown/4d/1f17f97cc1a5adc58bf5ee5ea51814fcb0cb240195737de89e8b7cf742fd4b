I"¯Z<p><img src="http://localhost:4000/assets/linguagem-python.png" alt="linguagem-python" style="width: 100%" /></p>

<h2 id="strings">Strings</h2>

<p>No python uma string √© um tipo de v√°rivel que cont√©m uma sequ√™ncia de caracteres ou n√∫meros (Observa√ß√£o: Lembre-se que se voc√™ informar um n√∫mero como string ele n√£o √© do tipo inteiro e nem flutuante nesse caso). Uma string sempre √© circundada por aspas duplas ou apostofre dupla tamb√©m. Exemplo: ‚ÄúTexto de exemplo‚Äù ou ‚ÄòTexto de exemplo‚Äô repare que ambos seguem a regra dita anteriormente.</p>

<p>Abra o seu terminal e fa√ßa o mesmo apresentado a seguir:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="o">&gt;&gt;&gt;</span> string <span class="o">=</span> <span class="s2">"Exemplo de texto"</span>
<span class="o">&gt;&gt;&gt;</span> print<span class="o">(</span>string<span class="o">)</span>
Exemplo de texto
<span class="o">&gt;&gt;&gt;</span> string1 <span class="o">=</span> <span class="s1">'1'</span>
<span class="o">&gt;&gt;&gt;</span> print<span class="o">(</span>string1<span class="o">)</span>
1
<span class="o">&gt;&gt;&gt;</span> string2 <span class="o">=</span> <span class="s2">"1.2"</span>
<span class="o">&gt;&gt;&gt;</span> print<span class="o">(</span>string2<span class="o">)</span>
1.2

<span class="o">&gt;&gt;&gt;</span> print<span class="o">(</span><span class="nb">type</span><span class="o">(</span>string<span class="o">))</span>
&lt;class <span class="s1">'str'</span><span class="o">&gt;</span>
<span class="o">&gt;&gt;&gt;</span> print<span class="o">(</span><span class="nb">type</span><span class="o">(</span>string1<span class="o">))</span>
&lt;class <span class="s1">'str'</span><span class="o">&gt;</span>
<span class="o">&gt;&gt;&gt;</span> print<span class="o">(</span><span class="nb">type</span><span class="o">(</span>string2<span class="o">))</span>
&lt;class <span class="s1">'str'</span><span class="o">&gt;</span>

</code></pre></div></div>

<p>No exemplo acima √© poss√≠vel observar que mesmo para n√∫meros, sejam eles inteiros ou flutuantes, se estiverem no modelo do tipo string eles n√£o s√£o utilizados mais como n√∫meros e sim como textos. Um exemplo disso ocorre se voc√™ tentar realizar alguma opera√ß√£o matem√°tica com eles veja o exemplo a seguir:</p>

<p>imagine que voc√™ tenha 2 vari√°veis:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="o">&gt;&gt;&gt;</span> num1 <span class="o">=</span> <span class="s2">"10"</span>
<span class="o">&gt;&gt;&gt;</span> num2 <span class="o">=</span> <span class="s2">"5"</span>

</code></pre></div></div>
<p>Se voc√™ tentar realizar as opera√ß√µes b√°sicas de subtra√ß√£o, multiplica√ß√£o e divis√£o voc√™ ir√° obter um erro avisando que esse tipo de tarefa n√£o √© poss√≠vel de ser feito pois voc√™ est√° utilizando vari√°veis do tipo string. Se voc√™ tentar realizar a opera√ß√£o de adi√ß√£o ela n√£o vai gerar um erro de compila√ß√£o e para seu c√≥digo mas, se voc√™ tentar somar essa duas var√°veis voc√™ ir√° obter o seguinte:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="o">&gt;&gt;&gt;</span> num1 <span class="o">=</span> <span class="s2">"10"</span>
<span class="o">&gt;&gt;&gt;</span> num2 <span class="o">=</span> <span class="s2">"5"</span>
<span class="o">&gt;&gt;&gt;</span> res <span class="o">=</span> num1 + num2
<span class="o">&gt;&gt;&gt;</span> print<span class="o">(</span>res<span class="o">)</span>
105
</code></pre></div></div>

<p>U√©, mas o que aconteceu? Ent√£o, isso aconteceu porque no python quando voc√™ utiliza o operador de soma <strong>+</strong> com strings ele realiza a jun√ß√£o dessas duas string e as transforma em apenas 1. Acredito que foi simples entender o que aconteceu n√£o foi mesmo?</p>

<p>A seguir, vou apresentar algumas fun√ß√µes disponiveis no python para trabalharmos com string e que podem ajudar muito sua vida na cria√ß√£o de algum programa que necessite o uso de strings.</p>

<p>Como saber o tamanho de uma string?
Para saber o tamanho de uma string, basta utilizar a fun√ß√£o <strong>len()</strong>. Essa fun√ß√£o retorna um valor inteiro referente a quantidade de caracteres presentes em uma string veja alguns exemplos a seguir:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> string1 <span class="o">=</span> <span class="s2">"Rafael"</span>
<span class="o">&gt;&gt;&gt;</span> len<span class="o">(</span>string1<span class="o">)</span>
6
<span class="o">&gt;&gt;&gt;</span> print<span class="o">(</span><span class="s2">"A string1 tem o tamanho: "</span>,len<span class="o">(</span>string1<span class="o">))</span>
A string1 tem o tamanho:  6

<span class="o">&gt;&gt;&gt;</span> string2 <span class="o">=</span> <span class="s2">"Eu sou programador(a)!"</span>
<span class="o">&gt;&gt;&gt;</span> len<span class="o">(</span>string2<span class="o">)</span>
22

</code></pre></div></div>

<p>Observa√ß√£o: lembre-se que o espa√ßo em branco entre caracteres tamb√©m √© computado como uma posi√ß√£o na string. Por esse motivo a string2 tem o tamanho 22 e n√£o 20.</p>

<p>Muito simples n√£o √© mesmo!</p>

<p>Agora vou relembrar a voc√™ meu caro(a) leitor(a) uma fun√ß√£o muito bacanuda que n√≥s conhecemos no in√≠cio do post chamada <strong>format()</strong>. Ela √© bastante simples e tamb√©m nos permite inserir valores em posi√ß√µes desejadas em uma string por meio de <strong>{}</strong> dentro da string. A seguir eu vou apresentar o modelo visto no in√≠cio do post e um plus dessa fun√ß√£o de modo que voc√™ consiga alterar a posi√ß√£o dos elementos inseridos na string.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> string <span class="o">=</span> <span class="s2">"O n√∫mero {} √© maior que o n√∫mero {} e meu nome √© {}"</span>.format<span class="o">(</span>10, 2, <span class="s2">"Rafael"</span><span class="o">)</span>
<span class="o">&gt;&gt;&gt;</span> print<span class="o">(</span>string<span class="o">)</span>
O n√∫mero 10 √© maior que o n√∫mero 2 e meu nome √© Rafael
<span class="o">&gt;&gt;&gt;</span> string <span class="o">=</span> <span class="s2">"O n√∫mero {1} √© maior que o n√∫mero {2} e meu nome √© {0}"</span>.format<span class="o">(</span>10, 2, <span class="s2">"Rafael"</span><span class="o">)</span>
<span class="o">&gt;&gt;&gt;</span> print<span class="o">(</span>string<span class="o">)</span>
O n√∫mero 2 √© maior que o n√∫mero Rafael e meu nome √© 10
</code></pre></div></div>

<p>No c√≥digo acima perceba que na primeira utiliza√ß√£o do m√©todo <strong>format</strong> dentro dele, voc√™ passa como par√¢metro os conteudos/vari√°veis respectivos(as) dos pares de chaves seguindo a ordem de preced√™ncia que eles aparecem como par√¢metros na fun√ß√£o format. No segundo caso um plus n√£o mencionado sobre esse m√©todo no √≠nicio do post √© que se voc√™ enumerar o interior do par de chaves com um n√∫mero que esteja dentro da quantidade de par√¢metros na fun√ß√£o format a vari√°vel/conte√∫do daquela posi√ß√£o ir√° ser movido para esse respectivo par de chaves. Vale ressaltar tamb√©m que a primeira posi√ß√£o de chaves come√ßa sempre por zero e n√£o por 1 e isso pode acabar confundindo sua cabe√ßa na hora de realizar isso. Uma boa pr√°tica nesse caso seria deixar as chaves sem n√∫mera√ß√£o e colocar os par√¢metros da fun√ß√£o format na ordem que eles devem aparecer na string.</p>

<p>Como acessar o conte√∫do de uma posi√ß√£o especifica na string?
Muito simples, basta utilizar colchetes na frente da sua string ou vari√°vel que contem sua string e acessar a posi√ß√£o desejada. Segue um exemplo:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="o">&gt;&gt;&gt;</span> <span class="s2">"python"</span><span class="o">[</span>0] <span class="c"># 'p'</span>
<span class="s1">'p'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="s2">"python"</span><span class="o">[</span>1] <span class="c"># 'y'</span>
<span class="s1">'y'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="s2">"python"</span><span class="o">[</span>2] <span class="c"># 't'</span>
<span class="s1">'t'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="s2">"python"</span><span class="o">[</span>3] <span class="c"># 'h'</span>
<span class="s1">'h'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="s2">"python"</span><span class="o">[</span>4] <span class="c"># 'o'</span>
<span class="s1">'o'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="s2">"python"</span><span class="o">[</span>5] <span class="c"># 'n'</span>
<span class="s1">'n'</span>
<span class="o">&gt;&gt;&gt;</span> string <span class="o">=</span> <span class="s2">"Rafael"</span>
<span class="o">&gt;&gt;&gt;</span> string[0]
<span class="s1">'R'</span>
<span class="o">&gt;&gt;&gt;</span> string[7]
Traceback <span class="o">(</span>most recent call last<span class="o">)</span>:
  File <span class="s2">"&lt;stdin&gt;"</span>, line 1, <span class="k">in</span> &lt;module&gt;
IndexError: string index out of range

</code></pre></div></div>

<p>No exemplo acima s√£o ilustrados 3 casos: 1¬∫ acessando a posi√ß√£o do conte√∫do diretamente da string, 2¬∫ atribuindo a string a uma vari√°vel e acessando a posi√ß√£o desejada na sequ√™ncia e 3¬∫ quando voc√™ tentar acessar uma posi√ß√£o que n√£o exista na string voc√™ receber√° como feedback do python a mensagem explicitando que voc√™ tentou acessar uma posi√ß√£o fora dos limites ou do tamanho da sua string.</p>

<p>Uma observa√ß√£o sobre strings: n√£o podemos alterar seu valor atribuindo um valor atrav√©s do √≠ndice. Como no exemplo a seguir:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="o">&gt;&gt;&gt;</span> string <span class="o">=</span> <span class="s2">"Rafael"</span>
<span class="o">&gt;&gt;&gt;</span> string[0] <span class="o">=</span> <span class="s2">"A"</span>
Traceback <span class="o">(</span>most recent call last<span class="o">)</span>:
  File <span class="s2">"main.py"</span>, line 2, <span class="k">in</span> &lt;module&gt;
    string[0] <span class="o">=</span> <span class="s2">"A"</span>
TypeError: <span class="s1">'str'</span> object does not support item assignment
</code></pre></div></div>

<p>A forma mais comum de se substituir alguma coisa dentro de uma string √© utilizando a fun√ß√£o <strong>replace()</strong>. No c√≥digo a seguir, vamos definir uma string e em seguida, substituir uma parte do seu conte√∫do por outra.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> texto <span class="o">=</span> <span class="s2">"A fun√ß√£o replace aaaaaa substitui parte de um texto por outro texto"</span>
<span class="o">&gt;&gt;&gt;</span> texto.replace<span class="o">(</span><span class="s2">"aaaaaa"</span>, <span class="s2">"basicamente"</span><span class="o">)</span>
<span class="s1">'A fun√ß√£o replace basicamente substitui parte de um texto por outro texto'</span>
<span class="o">&gt;&gt;&gt;</span>
</code></pre></div></div>

<p>No c√≥digo acima foi definido uma vari√°vel do tipo string chamada texto e dentro desta n√≥s colocamos uma marca√ß√£o <strong>aaaaaa</strong>, somente para facilitar o entendimento da fun√ß√£o <strong>replace</strong>. Em seguida, invocamos a fun√ßao replace(), e dissemos, que quer√≠amos alterar a string <strong>aaaaaa</strong> pelo conte√∫do, <strong>‚Äúbasicamente‚Äù</strong>. Feito isso, uma nova string foi retornada com a altera√ß√£o realizada.</p>

<p>Novamente √© importante relembrar que o que foi retornado √© uma nova string, at√© porque, a string utilizada n√£o pode ser alterada assim como j√° expliquei antes.</p>

<p>Vale ressaltar que o tipo string √© um objeto iter√°vel ent√£o podemos andar pelas posi√ß√µes da string utilizando um la√ßo de repeti√ß√£o. Veja um exemplo a seguir:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="k">for </span>letra <span class="k">in </span>string:
...   print<span class="o">(</span>letra<span class="o">)</span>
...
R
a
f
a
e
l
<span class="o">&gt;&gt;&gt;</span> <span class="k">for </span>indice,letra <span class="k">in </span>enumerate<span class="o">(</span><span class="s2">"Rafael"</span><span class="o">)</span>:
...   texto <span class="o">=</span> <span class="s2">"Posicao: {}, Letra: {}"</span>.format<span class="o">(</span>indice, letra<span class="o">)</span>
...   print<span class="o">(</span>texto<span class="o">)</span>
...
Posicao: 0, Letra: R
Posicao: 1, Letra: a
Posicao: 2, Letra: f
Posicao: 3, Letra: a
Posicao: 4, Letra: e
Posicao: 5, Letra: l
</code></pre></div></div>

<p>Outra coisa super bacana que podemos fazer com strings √© recuperar uma parte da string (i.e., fatiar a string que em ingl√™s voc√™ ver√° esse conceito como ‚Äúslice‚Äù). Fazer isso √© algo bastante simples, vejamos alguns exemplos a seguir:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> string <span class="o">=</span> <span class="s2">"Rafael"</span>
<span class="o">&gt;&gt;&gt;</span> string
<span class="s1">'Rafael'</span>
<span class="o">&gt;&gt;&gt;</span> string[1:4]
<span class="s1">'afa'</span>
<span class="o">&gt;&gt;&gt;</span> string[0:3]
<span class="s1">'Raf'</span>
<span class="o">&gt;&gt;&gt;</span> string[:3]
<span class="s1">'Raf'</span>
<span class="o">&gt;&gt;&gt;</span> string[-1]
<span class="s1">'l'</span>
<span class="o">&gt;&gt;&gt;</span> string[-2]
<span class="s1">'e'</span>
<span class="o">&gt;&gt;&gt;</span> string[:]
<span class="s1">'Rafael'</span>
<span class="o">&gt;&gt;&gt;</span> string[0:]
<span class="s1">'Rafael'</span>
</code></pre></div></div>

<p>Se eu quiser deixar minha string com todo o cont√©udo em <strong>caixa alta</strong> (i.e., em letra maiusc√∫la) eu preciso utilizar o m√©todo <strong>upper()</strong>. Veja um exemplo a seguir:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> string <span class="o">=</span> <span class="s2">"Meu nome √© Rafael!"</span>
<span class="o">&gt;&gt;&gt;</span> string
<span class="s1">'Meu nome √© Rafael!'</span>
<span class="o">&gt;&gt;&gt;</span> string.upper<span class="o">()</span>
<span class="s1">'MEU NOME √â RAFAEL!'</span>
</code></pre></div></div>

<p>Se eu quiser deixar minha string com todo o cont√©udo em <strong>caixa baixa</strong> (i.e., em letra minusc√∫la) eu preciso utilizar o m√©todo <strong>lower()</strong>. Veja um exemplo a seguir:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> string <span class="o">=</span> <span class="s2">"MEU NOME √â RAFAEL!"</span>
<span class="o">&gt;&gt;&gt;</span> string
<span class="s1">'MEU NOME √â RAFAEL!'</span>
<span class="o">&gt;&gt;&gt;</span> string.lower<span class="o">()</span>
<span class="s1">'meu nome √© rafael!'</span>
</code></pre></div></div>

<p>Se eu quiser converter uma vari√°vel n√∫merica em string eu preciso utilizar o m√©todo <strong>str()</strong>. Veja um exemplo a seguir:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> numero <span class="o">=</span> 10
<span class="o">&gt;&gt;&gt;</span> numero
10
<span class="o">&gt;&gt;&gt;</span> <span class="nb">type</span><span class="o">(</span>numero<span class="o">)</span>
&lt;class <span class="s1">'int'</span><span class="o">&gt;</span>
<span class="o">&gt;&gt;&gt;</span> str<span class="o">(</span>numero<span class="o">)</span>
<span class="s1">'10'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="nb">type</span><span class="o">(</span>str<span class="o">(</span>numero<span class="o">))</span>
&lt;class <span class="s1">'str'</span><span class="o">&gt;</span>
</code></pre></div></div>

<p>Se eu precisar descobrir se existe ou n√£o apenas letras na minha string eu preciso utilizar o m√©todo <strong>isalpha</strong>. Veja um exemplo a seguir:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="s2">"Rafael"</span>.isalpha<span class="o">()</span>
True
<span class="o">&gt;&gt;&gt;</span> <span class="s2">"Rafa1l"</span>.isalpha<span class="o">()</span>
False
<span class="o">&gt;&gt;&gt;</span> <span class="s2">"123"</span>.isalpha<span class="o">()</span>
False
</code></pre></div></div>

<p>Se eu precisar remover espa√ßos vazios ao redor da string eu preciso utilizar o m√©todo <strong>strip</strong>. Veja um exemplo a seguir:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="s2">" sobrando espa√ßos "</span>.strip<span class="o">()</span>
<span class="s1">'sobrando espa√ßos'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="s2">"  sobrando espa√ßos   "</span>.strip<span class="o">()</span>
<span class="s1">'sobrando espa√ßos'</span>
</code></pre></div></div>

<p>Se eu precisar juntar cada item de uma string por meio de um delimitador espec√≠fico eu preciso utilizar o m√©todo <strong>join()</strong>. Veja alguns exemplos a seguir:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> string <span class="o">=</span><span class="s2">"Eu estou com calor by Renata!"</span>
<span class="o">&gt;&gt;&gt;</span> string
<span class="s1">'Eu estou com calor by Renata!'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="s2">"_"</span>.join<span class="o">(</span>string<span class="o">)</span>
<span class="s1">'E_u_ _e_s_t_o_u_ _c_o_m_ _c_a_l_o_r_ _b_y_ _R_e_n_a_t_a_!'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="s2">"-"</span>.join<span class="o">([</span><span class="s1">'Rafael'</span>,<span class="s1">'Programacao'</span>,<span class="s1">'Blog'</span><span class="o">])</span>
<span class="s1">'Rafael-Programacao-Blog'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="s2">" "</span>.join<span class="o">([</span><span class="s1">'Rafael'</span>,<span class="s1">'Programacao'</span>,<span class="s1">'Blog'</span><span class="o">])</span>
<span class="s1">'Rafael Programacao Blog'</span>
</code></pre></div></div>

<p>Nos exemplos acima, eu tamb√©m ilustrei que √© poss√≠vel juntar listas que √© uma estrutura de dados utilizada em python e que ser√° melhor detalhada no pr√≥ximo t√≥pico.</p>

<p>E se eu n√£o gostei do que eu juntei e tamb√©m se eu pegar alguma string que eu queira separar os itens o que eu devo utilizar? Nesse caso, voc√™ precisa utilizar o m√©todo <strong>split()</strong>. Veja alguns exemplos a seguir:</p>

<p>Repare que o m√©todo <strong>split()</strong> tamb√©m utiliza um delimitador para separar a string diferente do m√©todo <strong>join()</strong> que usa um delimitador para juntar os itens da string. O <strong>split()</strong> √© o inverso do m√©todo <strong>join()</strong>. Veja alguns exemplos a seguir:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>string <span class="o">=</span> <span class="s2">"nome - sobrenome"</span>
<span class="o">&gt;&gt;&gt;</span> string.split<span class="o">(</span><span class="s2">"-"</span><span class="o">)</span>
<span class="o">[</span><span class="s1">'nome '</span>, <span class="s1">' sobrenome'</span><span class="o">]</span>
<span class="o">&gt;&gt;&gt;</span> string <span class="o">=</span> <span class="s2">"1,2,3,4,5,6"</span>
<span class="o">&gt;&gt;&gt;</span> string.split<span class="o">(</span><span class="s2">" "</span><span class="o">)</span>
<span class="o">[</span><span class="s1">'1,2,3,4,5,6'</span><span class="o">]</span>
<span class="o">&gt;&gt;&gt;</span> string.split<span class="o">(</span><span class="s2">","</span><span class="o">)</span>
<span class="o">[</span><span class="s1">'1'</span>, <span class="s1">'2'</span>, <span class="s1">'3'</span>, <span class="s1">'4'</span>, <span class="s1">'5'</span>, <span class="s1">'6'</span><span class="o">]</span>
</code></pre></div></div>

<p>Esses foram apenas alguns m√©todos que voc√™ pode aplicar para trabalhar com strings, se quiser conhecer outros n√£o mencionados aqui, eu recomendo que voc√™ acesse a documenta√ß√£o do python e explore ainda mais esse universo.</p>

<p>Exerc√≠cios para praticar o que aprendeu:</p>

<ol>
  <li>
    <p>Criar uma vari√°vel do tipo string e atribuir o seu nome a ela. Depois de atribuir seu nome a vari√°vel criada, imprima seu conte√∫do na tela com a seguinte frase: ‚ÄúOl√° eu sou: ‚Äú e imprima o seu nome ap√≥s os ‚Äú:‚Äù.</p>
  </li>
  <li>
    <p>Criar uma vari√°vel e atribuir seu nome a ela. Criar uma segunda vari√°vel e atribuir o nome de uma pessoa que voc√™ gosta a ela. No final imprimir o resultado da concatena√ß√£o do conte√∫do da primeira vari√°vel ‚Äú+‚Äù a seguinte frase ‚Äú curte ‚Äú ‚Äú+‚Äù com o conte√∫do da segunda vari√°vel que voc√™ criou. Exemplo de resultado: ‚ÄúRafael curte Renata‚Äù.</p>
  </li>
  <li>
    <p>Criar uma vari√°vel e atribuir seu nome completo a ela. Depois de atribuir seu nome completo a ela imprimir a quantidade de caracteres que tem no seu nome completo. Dica: lembre de antes de apresentar o valor subtrair com a quantidade de espa√ßos vazios entre as palavras.</p>
  </li>
  <li>
    <p>Criar uma vari√°vel e atribuir o nome do seu animal de estima√ß√£o a ela. Depois de atribuir o nome do seu pet a vari√°vel, criar uma frase e adicionar a vari√°vel na frase utilizando a fun√ß√£o <strong>format()</strong>.</p>
  </li>
  <li>
    <p>Criar uma vari√°vel e atribuir o seguinte texto a ela ‚ÄúO rato roeu a roupa do rei de Roma‚Äù. Depois de atribuir o texto a vari√°vel, imprimir o conte√∫do do texto substituindo a palavra ‚Äúrei‚Äù pelo seu nome.</p>
  </li>
  <li>
    <p>Criar uma vari√°vel e atribuir o seu nome completo a ela. Depois de atribuir o seu nome completo a vari√°vel, imprimir somente as 3 primeiras letras do seu nome.</p>
  </li>
  <li>
    <p>Criar uma vari√°vel e atribuir o conte√∫do ‚ÄúEu sou grande!‚Äù o a ela. Depois de atribuir o conte√∫do a vari√°vel, imprimir todo o conte√∫do em caixa alta.</p>
  </li>
  <li>
    <p>Criar uma vari√°vel e atribuir o conte√∫do ‚ÄúEu sou pequeno!‚Äù o a ela. Depois de atribuir o conte√∫do a vari√°vel, imprimir todo o conte√∫do em caixa baixa.</p>
  </li>
  <li>
    <p>Fa√ßa um programa que solicite ao usu√°rio 2 vari√°veis onde, a primeira recebera um texto e a segunda um outro texto com conte√∫do diferentes. Verifique qual vari√°vel tem o tamanho maior entre as duas e imprimir qual √© a maior.</p>
  </li>
  <li>
    <p>Fa√ßa um programa que solicite um texto e separe ele por meio do delimitador ‚Äú*‚Äù.</p>
  </li>
</ol>
:ET