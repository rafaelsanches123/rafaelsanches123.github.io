I"˙8<p><img src="https://rafaelsanches123.github.io/assets/linguagem-python.png" alt="linguagem-python" style="width: 100%" /></p>

<h2 id="la√ßos-de-repeti√ß√£o">La√ßos de repeti√ß√£o</h2>

<p>Os la√ß√µes de repeti√ß√£o s√£o utilizados na maioria das vezes para realizar repeti√ß√µes que podem ser previamente conhecidas ou n√£o dependendo do que voc√™ deseja realizar. Uma aplica√ß√£o bastante realizada por meio de repeti√ß√µes por exemplo ocorre quando eu tenho uma lista de itens e eu desejo saber quem s√£o todos esse itens dessa lista. Ou enquanto algo n√£o ocorrer eu continuo repetindo algum bloco de comando at√© que tal condi√ß√£o seja satisfeita.</p>

<p>No python nos temos os seguintes comandos de la√ßo de repeti√ß√£o sendo eles o: <strong>for</strong> e o <strong>while</strong>.</p>

<p>o la√ßo de repeti√ß√£o <strong>for</strong>: ele √© geralmente utilizado quando eu sei a quantidade de repeti√ß√µes a serem realizadas.</p>

<p>o la√ßo de repeti√ß√£o <strong>while</strong>: ele √© geralmente utilizado quando eu n√£o sei o n√∫mero de repeti√ß√µes a serem realizadas.</p>

<p>Vamos entender isso um pouco mais. Vamos imaginar que o professor Rafael te passou uma li√ß√£o para casa e voc√™ n√£o a fez. Como castigo o professor Rafael lhe pediu para que escrever na losa o seu nome dele 10 vezes para que voc√™ n√£o esque√ßa mais de fazer a li√ß√£o de casa. Poxa vida mas que coisa chata, √© verdade eu tamb√©m pensei o mesmo.</p>

<p>No mundo digital isso n√£o precisa ser chato basta, utilizar o la√ßo <strong>for</strong> para nos ajudar nessa tarefa. Ok mas o que eu fa√ßo? vamos l√°:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="k">for </span>i <span class="k">in </span>range<span class="o">(</span>0,10<span class="o">)</span>:
...     print<span class="o">(</span><span class="s2">"Rafael"</span><span class="o">)</span>
...
Rafael
Rafael
Rafael
Rafael
Rafael
Rafael
Rafael
Rafael
Rafael
Rafael
<span class="o">&gt;&gt;&gt;</span>
</code></pre></div></div>
<p>Vamos entender o c√≥digo acima e tamb√©m o que o comando novo que surgiu faz. A estrutura do comando for √© bastante simples de forma falada o que ele faz √©: ‚ÄúPara‚Äù cada valor ‚Äúi‚Äù iniciando a partir de ‚Äú0‚Äù at√© ‚Äú10‚Äù fa√ßa. De forma bastante sucinta √© exatamente isso que ele faz. O comando <strong>range</strong> nada mais √© do que uma <strong>fun√ß√£o</strong> algo que ser√° visto mais a frente que cria para voc√™ uma lista de n√∫meros que vai de 0 at√© 9 exatamente. A vari√°vel i ap√≥s o comando for para cada itera√ß√£o ela recebe o conteudo gerado pela fun√ß√£o range.</p>

<p>Agora, vamos replicar a mesma ideia acima s√≥ que uma pitada a mais de conhecimento utilizando o comando <strong>enumerate</strong> e pega uma lista ou outro tipo de cole√ß√£o de dados e lhe retorna o indice e o valor referente aquele indice. Vamos por a m√£o na massa para entender isso melhor:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> numeros <span class="o">=</span> range<span class="o">(</span>0,10<span class="o">)</span>
<span class="o">&gt;&gt;&gt;</span> numeros
range<span class="o">(</span>0, 10<span class="o">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="k">for </span>indice, valor <span class="k">in </span>enumerate<span class="o">(</span>numeros<span class="o">)</span>:
...     print<span class="o">(</span><span class="s2">"indice:"</span>,indice,<span class="s2">"valor:"</span>,valor<span class="o">)</span>
...
indice: 0 valor: 0
indice: 1 valor: 1
indice: 2 valor: 2
indice: 3 valor: 3
indice: 4 valor: 4
indice: 5 valor: 5
indice: 6 valor: 6
indice: 7 valor: 7
indice: 8 valor: 8
indice: 9 valor: 9

<span class="o">&gt;&gt;&gt;</span> <span class="k">for </span>indice, valor <span class="k">in </span>enumerate<span class="o">(</span>numeros<span class="o">)</span>:
...     print<span class="o">(</span><span class="s2">"indice:"</span>,indice,<span class="s2">"valor:"</span>,valor,<span class="s2">"Rafael"</span><span class="o">)</span>
...
indice: 0 valor: 0 Rafael
indice: 1 valor: 1 Rafael
indice: 2 valor: 2 Rafael
indice: 3 valor: 3 Rafael
indice: 4 valor: 4 Rafael
indice: 5 valor: 5 Rafael
indice: 6 valor: 6 Rafael
indice: 7 valor: 7 Rafael
indice: 8 valor: 8 Rafael
indice: 9 valor: 9 Rafael
<span class="o">&gt;&gt;&gt;</span>

</code></pre></div></div>

<p>No exemplo acima como ainda estamos utilizando sequ√™ncia num√©rica o indice tem o mesmo valor que o seu conteudo. Para deixar isso mais claro vamos ver um exemplo com uma lista de frutas e exibir cada fruta e seus respectivo indice referente a sua posi√ß√£o na lista.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> lista_frutas <span class="o">=</span> <span class="o">[</span><span class="s1">'ma√ßa'</span>,<span class="s1">'pera'</span>,<span class="s1">'morango'</span>,<span class="s1">'lim√£o'</span>,<span class="s1">'banana'</span>,<span class="s1">'uva'</span><span class="o">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="k">for </span>fruta <span class="k">in </span>lista_frutas:
...     print<span class="o">(</span><span class="s2">"Nome fruta:"</span>, fruta<span class="o">)</span>
...
Nome fruta: ma√ßa
Nome fruta: pera
Nome fruta: morango
Nome fruta: lim√£o
Nome fruta: banana
Nome fruta: uva
<span class="o">&gt;&gt;&gt;</span>
</code></pre></div></div>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="k">for </span>indice,valor <span class="k">in </span>enumerate<span class="o">(</span>lista_frutas<span class="o">)</span>:
...     print<span class="o">(</span><span class="s2">"posicao da fruta na lista:"</span>, indice, <span class="s2">"Nomde da fruta:"</span>, valor<span class="o">)</span>
...
posicao da fruta na lista: 0 Nomde da fruta: ma√ßa
posicao da fruta na lista: 1 Nomde da fruta: pera
posicao da fruta na lista: 2 Nomde da fruta: morango
posicao da fruta na lista: 3 Nomde da fruta: lim√£o
posicao da fruta na lista: 4 Nomde da fruta: banana
posicao da fruta na lista: 5 Nomde da fruta: uva
<span class="o">&gt;&gt;&gt;</span>

</code></pre></div></div>

<p>Simples n√£o √© mesmo?</p>

<p>Agora vamos entender melhor o la√ßo de repeti√ß√£o <strong>while</strong>. O comando <strong>while</strong> faz com que um conjunto de instru√ß√µes seja executado enquanto uma condi√ß√£o √© atendida. Quando o resultado dessa condi√ß√£o passa a ser falso, a execu√ß√£o do loop √© interrompida, como mostra o exemplo a seguir.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> contador <span class="o">=</span> 0
<span class="o">&gt;&gt;&gt;</span> <span class="k">while</span> <span class="o">(</span>contador &lt; 10<span class="o">)</span>:
...        print<span class="o">(</span>contador<span class="o">)</span>
...        contador   <span class="o">=</span> contador + 1
...
0
1
2
3
4
5
6
7
8
9
</code></pre></div></div>
<p>No c√≥digo acima eu inicializei uma vari√°vel chamanda de contador com o valor zero e na linha seguinte eu uso o comando while seguido de uma express√£o booleana que enquanto ela continuar sendo verdadeira o la√ßo de repeti√ß√£o ir√° continuar acontecendo. No caso do exemplo acima a condi√ß√£o diz que <strong>ENQUANTO</strong> o conte√∫do da vari√°vel contador for menor que dez o la√ßo de repeti√ß√£o deve ser executado.
Nesse exemplo a cada execu√ß√£o √© apresentado ao usu√°rio o valor corrente da vari√°vel contador naquele momento e na sequ√™ncia ele tem seu valor alterado para que em determinado momento o la√ßo seja interrompido e por consequ√™ncia finalizado. Se por algum acaso a sua condi√ß√£o sempre gerar resultado verdadeiro voc√™ ir√° cair no que chamamos de loop infinito ou la√ßo de repeti√ß√£o sem fim. Evite que isso aconte√ßa, pois leva ao congelamento e finaliza√ß√£o da aplica√ß√£o/programa de computador.</p>

<p>A seguir veja um exemplo utilizando entrada de dados.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> numero <span class="o">=</span> int<span class="o">(</span>input<span class="o">(</span><span class="s2">"Informe um n√∫mero entre 1 a 10</span><span class="se">\n</span><span class="s2">"</span><span class="o">))</span>
Informe um n√∫mero entre 1 a 10
2
<span class="o">&gt;&gt;&gt;</span> <span class="k">while</span><span class="o">(</span>numero <span class="o">&gt;</span> 0 and numero &lt;<span class="o">=</span>10<span class="o">)</span>:
...     print<span class="o">(</span><span class="s2">"Voc√™ informou o n√∫mero: {}"</span>.format<span class="o">(</span>numero<span class="o">))</span>
...     numero <span class="o">=</span> int<span class="o">(</span>input<span class="o">(</span><span class="s2">"Informe um n√∫mero entre 1 a 10</span><span class="se">\n</span><span class="s2">"</span><span class="o">))</span>
...
Voc√™ informou o n√∫mero: 2
Informe um n√∫mero entre 1 a 10
2
Voc√™ informou o n√∫mero: 2
Informe um n√∫mero entre 1 a 10
5
Voc√™ informou o n√∫mero: 5
Informe um n√∫mero entre 1 a 10
0

</code></pre></div></div>
<p>Veja que interessante o c√≥digo acima. Nele √© solicitado um n√∫mero ao usu√°rio e enquanto esse n√∫mero informado pelo usu√°rio for maior que zero e menor ou igual a dez o computador ir√° ficar solicitando ao usu√°rio um n√∫mero desde que ele atenda a condi√ß√£o do la√ßo while.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> numero <span class="o">=</span> int<span class="o">(</span>input<span class="o">(</span><span class="s2">"Informe um n√∫mero entre 1 a 10</span><span class="se">\n</span><span class="s2">"</span><span class="o">))</span>
Informe um n√∫mero entre 1 a 10
1
<span class="o">&gt;&gt;&gt;</span> print<span class="o">(</span>numero<span class="o">)</span>
1
<span class="o">&gt;&gt;&gt;</span> <span class="k">while</span><span class="o">(</span>numero <span class="o">&gt;</span> 0 and numero &lt;<span class="o">=</span>10<span class="o">)</span>:
...     print<span class="o">(</span><span class="s2">"Voc√™ informou o n√∫mero: {}"</span>.format<span class="o">(</span>numero<span class="o">))</span>
...     numero <span class="o">=</span> int<span class="o">(</span>input<span class="o">(</span><span class="s2">"Informe um n√∫mero entre 1 a 10</span><span class="se">\n</span><span class="s2">"</span><span class="o">))</span>
... <span class="k">else</span>:
...     print<span class="o">(</span><span class="s2">"Voc√™ informou o n√∫mero: {} e ele est√° fora da condi√ß√£o estabelecida"</span>.format<span class="o">(</span>numero<span class="o">))</span>
...
Voc√™ informou o n√∫mero: 1
Informe um n√∫mero entre 1 a 10
5
Voc√™ informou o n√∫mero: 5
Informe um n√∫mero entre 1 a 10
6
Voc√™ informou o n√∫mero: 6
Informe um n√∫mero entre 1 a 10
4
Voc√™ informou o n√∫mero: 4
Informe um n√∫mero entre 1 a 10
11
Voc√™ informou o n√∫mero: 11 e ele est√° fora da condi√ß√£o estabelecida

</code></pre></div></div>

<p>O c√≥digo acima √© exatamente igual ao anterior mas com o diferencial do comando <strong>else</strong> eu particularmente nunca utilizei ele com la√ßo de repeti√ß√£o while mas, se em algum momento voc√™ precisar fica ai mais uma forma de utilizar ele no seu dia a dia se for da sua vontade e necessidade.</p>

<p>Exerc√≠cios para praticar o que aprendeu:</p>

<ol>
  <li>
    <p>Com a ajuda de uma la√ßo de repeti√ß√£o, solicite ao usu√°rio um n√∫mero inteiro e a cada itera√ß√£o desse la√ßo. O n√∫mero de repeti√ß√µes deve ser 10. A cada itera√ß√£o imprimir na tela a sequ√™ncia do la√ßo e o n√∫mero que o usu√°rio informou naquela itera√ß√£o.</p>
  </li>
  <li>
    <p>Fa√ßa um programa similar ao programa do exerc√≠cio 1 acima. Nesse novo programa, ao final da execu√ß√£o desse la√ßo de repeti√ß√£o voc√™ precisa imprimir na tela do usu√°rio qual foi o menor n√∫mero informado durante a execu√ß√£o do la√ßo de repeti√ß√£o.</p>
  </li>
  <li>
    <p>Fa√ßa um programa similar ao programa do exerc√≠cio 2 acima. Nesse novo programa, ao final da execu√ß√£o desse la√ßo de repeti√ß√£o voc√™ precisa imprimir na tela do usu√°rio qual foi o maior n√∫mero informado durante a execu√ß√£o do la√ßo de repeti√ß√£o.</p>
  </li>
  <li>
    <p>Solicite ao usu√°rio dois n√∫meros inteiros e imprimir na tela do usu√°rio os n√∫meros entre os dois n√∫meros solicitados. Ex: n1=2 e n2=5 caso voc√™ use esses dois n√∫mero o dever√° aparecer na tela do usu√°rio a seguinte sequ√™ncia: 2, 3, 4, 5.</p>
  </li>
  <li>
    <p>Fa√ßa um programa similar ao programa do exerc√≠cio 4 acima. Nesse novo programa, voc√™ deve imprimir no final da sequ√™ncia solicitada ao usu√°rio o somat√≥rio dessa sequ√™ncia.</p>
  </li>
  <li>
    <p>Com a ajuda de um la√ßo de repeti√ß√£o realize 20 repeti√ß√µes e imprima na tela do usu√°rio somente as posi√ß√µes impares.</p>
  </li>
  <li>
    <p>Com a ajuda de um la√ßo de repeti√ß√£o realize 30 repeti√ß√µes e imprima na tela do usu√°rio somente as posi√ß√µes pares.</p>
  </li>
  <li>
    <p>Com a ajuda de um la√ßo de repeti√ß√£o, fique solicitando um valor inteiro ao usu√°rio a cada itera√ß√£o do la√ßo. O la√ßo de repeti√ß√£o nesse exerc√≠cio s√≥ deve terminar quando o usu√°rio informar um valor inteiro negativo.</p>
  </li>
  <li>
    <p>Desenvolva um programa gerador de tabuada, capaz de gerar a tabuada de qualquer n√∫mero inteiro entre 1 a 10. O usu√°rio deve informar de qual numero ele deseja ver a tabuada. A sa√≠da deve ser conforme o exemplo abaixo:
Tabuada de 5:
5 X 1 = 5
5 X 2 = 10
‚Ä¶
5 X 10 = 50</p>
  </li>
  <li>
    <p>O desafio mais dificil desse est√°gio: <strong>Fibonacci</strong> √© uma sequ√™ncia de n√∫meros, que aparece em certos mist√©rios da natureza e da vida, onde a sequ√™ncia inicia com 0 e 1, e os n√∫meros seguintes ser√£o a soma dos dois n√∫meros anteriores.</p>
  </li>
</ol>

<p>Por exemplo: 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55‚Ä¶</p>

<p>Fa√ßa um programa capaz de gerar a s√©rie de Fibonacci at√© o n‚àí√©simo termo ou seja, solicite um n√∫mero inteiro ao usu√°rio e dado esse n√∫mero gerar a s√©rie de Fibonacci at√© essa posi√ß√£o da sequ√™ncia. Por exemplo, se o usu√°rio solicitar a 7¬™ voc√™ deve gerar a sequ√™ncia 0, 1, 1, 2, 3, 5, 8 na tela do usu√°rio.</p>
:ET