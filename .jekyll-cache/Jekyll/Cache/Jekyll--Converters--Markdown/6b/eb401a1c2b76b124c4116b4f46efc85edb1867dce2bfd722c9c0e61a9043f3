I"á<p><img src="https://rafaelsanches123.github.io/assets/linguagem-python.png" alt="linguagem-python" style="width: 100%" /></p>

<h2 id="fun√ß√µes">Fun√ß√µes</h2>

<p>Fun√ß√µes s√£o uma das ferramentas mais poderosas quando falamos de programa√ß√£o de computadores. As fun√ß√µes fornecem ao programador(a) o poder de <strong>reuzar um peda√ßo de c√≥digo</strong> em <strong>mais de um local diferente</strong> do seu c√≥digo/projeto. Saber usar fun√ß√µes √© fundamental tamb√©m para que voc√™ tenha um c√≥digo mais limpo e organizado de modo que voc√™ consiga fazer a <strong>manuten√ß√£o</strong> do mesmo de <strong>forma mais suave</strong> quando necess√°rio.</p>

<p>A primeira coisa que vem a minha cabe√ßa quando eu escuto a o termo <strong>‚Äúfun√ß√£o‚Äù</strong> √© uma frase que uma professora que me deu aula na gradua√ß√£o falava para minha turma que era <strong>‚ÄúDividir para conquistar‚Äù</strong> e essa frase faz todo o sentido depois que voc√™ entendo como trabalhar com fun√ß√µes independente da linguagem de programa√ß√£o que voc√™ esteja utilizando.</p>

<p>Como criar uma fun√ß√£o no python? Como √© a sua sintaxe?</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="k">def</span> <span class="nf">nome_da_funcao</span><span class="p">(</span><span class="n">param1</span><span class="p">,</span> <span class="n">param2</span><span class="p">,</span> <span class="n">param3</span><span class="p">):</span>
  <span class="n">resultado</span> <span class="o">=</span> <span class="n">param1</span> <span class="o">+</span> <span class="n">param2</span> <span class="o">+</span> <span class="n">param3</span>
  <span class="k">return</span> <span class="n">resultado</span>

<span class="k">def</span> <span class="nf">nome_da_funcao</span><span class="p">(</span><span class="n">param1</span><span class="p">,</span> <span class="n">param2</span><span class="p">,</span> <span class="n">param3</span><span class="p">):</span>
  <span class="n">resultado</span> <span class="o">=</span> <span class="n">param1</span> <span class="o">+</span> <span class="n">param2</span> <span class="o">+</span> <span class="n">param3</span>
  <span class="k">print</span><span class="p">(</span><span class="s">"Resultado da Fun√ß√£o: {}"</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">resultado</span><span class="p">))</span>

<span class="k">def</span> <span class="nf">nome_da_funcao</span><span class="p">(</span><span class="n">param1</span><span class="p">,</span> <span class="n">param2</span><span class="p">,</span> <span class="n">param3</span><span class="p">):</span>
  <span class="n">param1</span> <span class="o">=</span> <span class="n">param1</span> <span class="o">+</span> <span class="mi">5</span>
  <span class="n">param2</span> <span class="o">=</span> <span class="n">param2</span> <span class="o">+</span> <span class="mi">3</span>
  <span class="n">param3</span> <span class="o">=</span> <span class="n">param3</span> <span class="o">+</span> <span class="mi">7</span>
  <span class="k">return</span> <span class="n">param1</span><span class="p">,</span> <span class="n">param2</span><span class="p">,</span> <span class="n">param3</span>

</code></pre></div></div>
<p>Pontos importantes:</p>
<ul>
  <li>Toda fun√ß√£o em python come√ßa com a palavra reservada <strong>def</strong>;</li>
  <li><strong>def</strong> √© sempre precedida do nome da fun√ß√£o como por exemplo: <strong>nome_da_funcao</strong> sem caracteres especiais;</li>
  <li><strong>nome_da_funcao</strong> por sua vez √© precedida de <strong>(</strong> <strong>)</strong> onde, dentro dos parenteses ser√£o passados os par√¢metros para sua fun√ß√£o. Esses par√¢metros podem ser valores que voc√™ ir√° modificar para retornar pos altera√ß√£o por exemplo;</li>
  <li>Sua fun√ß√£o pode retornar um valor √∫nico;</li>
  <li>Sua fun√ß√£o pode retornar multiplos valores/vari√°veis;</li>
  <li>Sua fun√ß√£o pode n√£o retornar nada tamb√©m.</li>
</ul>

<p>Bora l√° devs, entender melhor sobre fun√ß√µes. A seguir vou lhes apresentar um caso muito simples de se utilizar fun√ß√µes. Vamos imaginar uma calculadora que tenha 4 funcionalidades: <strong>Somar</strong>, <strong>Subtrair</strong>, <strong>Multiplicar</strong> e <strong>Dividir</strong>.</p>

<p>Abra o seu terminal e bor√° colocar a m√£o na massa:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="o">&gt;&gt;&gt;</span> def somar<span class="o">(</span>num1, num2<span class="o">)</span>:
...   <span class="k">return </span>num1 + num2
...
<span class="o">&gt;&gt;&gt;</span> def subtrair<span class="o">(</span>num1, num2<span class="o">)</span>:
...   <span class="k">return </span>num1 - num2
...
<span class="o">&gt;&gt;&gt;</span> def multiplicar<span class="o">(</span>num1, num2<span class="o">)</span>:
...   <span class="k">return </span>num1 <span class="k">*</span> num2
...
<span class="o">&gt;&gt;&gt;</span> def dividir<span class="o">(</span>num1, num2<span class="o">)</span>:
...   <span class="k">return </span>num1 / num2
...
<span class="o">&gt;&gt;&gt;</span> resultado <span class="o">=</span> somar<span class="o">(</span>10,5<span class="o">)</span>
<span class="o">&gt;&gt;&gt;</span> resultado
15
<span class="o">&gt;&gt;&gt;</span> resultado <span class="o">=</span> subtrair<span class="o">(</span>10,5<span class="o">)</span>
<span class="o">&gt;&gt;&gt;</span> resultado
5
<span class="o">&gt;&gt;&gt;</span> resultado <span class="o">=</span> multiplicar<span class="o">(</span>10,5<span class="o">)</span>
<span class="o">&gt;&gt;&gt;</span> resultado
50
<span class="o">&gt;&gt;&gt;</span> resultado <span class="o">=</span> dividir<span class="o">(</span>10,5<span class="o">)</span>
<span class="o">&gt;&gt;&gt;</span> resultado
2.0
</code></pre></div></div>

<p>Nos exemplos acima, foram criadas <strong>4 fun√ß√µes</strong> uma para somar 2 n√∫meros, subtrair, multiplicar e dividir. Assim como apresentados os pontos importantes √© interessante observar que nossa c√≥difica√ß√£o segue exatamente o que foi descrito no come√ßo e tamb√©m √© poss√≠vel observar que trabalhar com fun√ß√µes √© algo bastante simples em python.</p>

<p>Depois de ver o exemplo acima, acredito que voc√™ meu caro(a) leitor(a) voc√™ est√° pronto para praticar e entender mais sobre fun√ß√µes.</p>

<p>Exerc√≠cios para praticar o que aprendeu:</p>

<ol>
  <li>Crie um programa semelhante a uma calculadora:
    <ul>
      <li>Primeiro Solicite um n√∫mero inteiro entre 1 e 4.</li>
      <li>Se o usu√°rio digitar 1 voc√™ deve solicitar 2 novos n√∫meros para ele e realizar a a√ß√£o de somar esses 2 novos n√∫meros;</li>
      <li>Se o usu√°rio digitar 2 voc√™ deve solicitar 2 novos n√∫meros para ele e realizar a a√ß√£o de subtrair esses 2 novos n√∫meros;</li>
      <li>Se o usu√°rio digitar 3 voc√™ deve solicitar 2 novos n√∫meros para ele e realizar a a√ß√£o de multiplicar esses 2 novos n√∫meros;</li>
      <li>Se o usu√°rio digitar 4 voc√™ deve solicitar 2 novos n√∫meros para ele e realizar a a√ß√£o de dividir esses 2 novos n√∫meros;</li>
      <li>Para sair do la√ßo de repeti√ß√£o solicite ao usu√°rio que informe um n√∫mero -1.</li>
    </ul>
  </li>
  <li>
    <p>Crie um programa que leia um n√∫mero e imprima na tela do computador se ele √© Par ou √çmpar.</p>
  </li>
  <li>
    <p>Crie um programa que leia um n√∫mero e imprima se esse n√∫mero √© palindromo ou n√£o. Obs: um n√∫mero palindromo √© aquele que siginifica a mesma coisa de tr√°s para frente ex: 121.</p>
  </li>
  <li>
    <p>Crie um programa que receba uma lista de n√∫meros e retorne o menor n√∫mero da lista.</p>
  </li>
  <li>
    <p>Crie um programa que receba uma lista de n√∫meros e retorne o maior n√∫mero da lista.</p>
  </li>
  <li>
    <p>Crie um programa que receba uma lista de n√∫meros e calcule a soma desses n√∫meros da lista.</p>
  </li>
  <li>Crie um programa que leia uma lista e retorno a sua vers√£o reversa.</li>
</ol>
:ET